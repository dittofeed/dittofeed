{
  "openapi": "3.1.0",
  "info": {
    "title": "Dittofeed API",
    "description": "Dittofeed API Swagger Documentation",
    "version": "0.0.1"
  },
  "components": {
    "securitySchemes": {
      "publicWriteKey": {
        "type": "apiKey",
        "description": "Authorization header for the request, in the format `Bearer <token>`. Find your token at https://dittofeed.com/dashboard/settings#write-key.",
        "name": "PublicWriteKey",
        "in": "header"
      }
    },
    "schemas": {}
  },
  "paths": {
    "/api/": {
      "get": {
        "description": "Application health check endpoint.",
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/content/templates/render": {
      "post": {
        "tags": [
          "Content"
        ],
        "description": "Render message template.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "workspaceId": {
                    "type": "string"
                  },
                  "channel": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "Email"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "MobilePush"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "Sms"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "Webhook"
                        ]
                      }
                    ]
                  },
                  "subscriptionGroupId": {
                    "type": "string"
                  },
                  "contents": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "mjml": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "value"
                      ]
                    }
                  },
                  "userProperties": {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  "tags": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "workspaceId",
                  "channel",
                  "contents",
                  "userProperties"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "contents": {
                      "type": "object",
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Ok"
                                ]
                              },
                              "value": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "value"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Err"
                                ]
                              },
                              "err": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "err"
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "contents"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/content/templates": {
      "put": {
        "tags": [
          "Content"
        ],
        "description": "Create or update message template",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "workspaceId": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "definition": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "MobilePush"
                            ]
                          },
                          "title": {
                            "type": "string"
                          },
                          "body": {
                            "type": "string"
                          },
                          "imageUrl": {
                            "type": "string"
                          },
                          "android": {
                            "type": "object",
                            "properties": {
                              "notification": {
                                "type": "object",
                                "properties": {
                                  "channelId": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "required": [
                              "notification"
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Email"
                            ]
                          },
                          "from": {
                            "type": "string"
                          },
                          "body": {
                            "type": "string"
                          },
                          "subject": {
                            "type": "string"
                          },
                          "replyTo": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "from",
                          "body",
                          "subject"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Sms"
                            ]
                          },
                          "body": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "body"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Webhook"
                            ]
                          },
                          "identifierKey": {
                            "type": "string"
                          },
                          "body": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "identifierKey",
                          "body"
                        ]
                      }
                    ]
                  },
                  "draft": {
                    "anyOf": [
                      {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "MobilePush"
                                ]
                              },
                              "title": {
                                "type": "string"
                              },
                              "body": {
                                "type": "string"
                              },
                              "imageUrl": {
                                "type": "string"
                              },
                              "android": {
                                "type": "object",
                                "properties": {
                                  "notification": {
                                    "type": "object",
                                    "properties": {
                                      "channelId": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "notification"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Email"
                                ]
                              },
                              "from": {
                                "type": "string"
                              },
                              "body": {
                                "type": "string"
                              },
                              "subject": {
                                "type": "string"
                              },
                              "replyTo": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "from",
                              "body",
                              "subject"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Sms"
                                ]
                              },
                              "body": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "body"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Webhook"
                                ]
                              },
                              "identifierKey": {
                                "type": "string"
                              },
                              "body": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "identifierKey",
                              "body"
                            ]
                          }
                        ]
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workspaceId": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "Email"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "MobilePush"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "Sms"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "Webhook"
                          ]
                        }
                      ]
                    },
                    "definition": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "MobilePush"
                              ]
                            },
                            "title": {
                              "type": "string"
                            },
                            "body": {
                              "type": "string"
                            },
                            "imageUrl": {
                              "type": "string"
                            },
                            "android": {
                              "type": "object",
                              "properties": {
                                "notification": {
                                  "type": "object",
                                  "properties": {
                                    "channelId": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "required": [
                                "notification"
                              ]
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Email"
                              ]
                            },
                            "from": {
                              "type": "string"
                            },
                            "body": {
                              "type": "string"
                            },
                            "subject": {
                              "type": "string"
                            },
                            "replyTo": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "from",
                            "body",
                            "subject"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Sms"
                              ]
                            },
                            "body": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "body"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Webhook"
                              ]
                            },
                            "identifierKey": {
                              "type": "string"
                            },
                            "body": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "identifierKey",
                            "body"
                          ]
                        }
                      ]
                    },
                    "draft": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "MobilePush"
                              ]
                            },
                            "title": {
                              "type": "string"
                            },
                            "body": {
                              "type": "string"
                            },
                            "imageUrl": {
                              "type": "string"
                            },
                            "android": {
                              "type": "object",
                              "properties": {
                                "notification": {
                                  "type": "object",
                                  "properties": {
                                    "channelId": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "required": [
                                "notification"
                              ]
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Email"
                              ]
                            },
                            "from": {
                              "type": "string"
                            },
                            "body": {
                              "type": "string"
                            },
                            "subject": {
                              "type": "string"
                            },
                            "replyTo": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "from",
                            "body",
                            "subject"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Sms"
                              ]
                            },
                            "body": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "body"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Webhook"
                              ]
                            },
                            "identifierKey": {
                              "type": "string"
                            },
                            "body": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "identifierKey",
                            "body"
                          ]
                        }
                      ]
                    },
                    "updatedAt": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "workspaceId",
                    "id",
                    "name",
                    "type",
                    "updatedAt"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Content"
        ],
        "description": "Delete a message template.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "type": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "Email"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "MobilePush"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "Sms"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "Webhook"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "An empty String",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An empty String",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "An empty String",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An empty String",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/content/templates/reset": {
      "put": {
        "tags": [
          "Content"
        ],
        "description": "Create or update message template",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "workspaceId": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "type": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "Email"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "MobilePush"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "Sms"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "Webhook"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "workspaceId",
                  "id",
                  "type"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workspaceId": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "Email"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "MobilePush"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "Sms"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "Webhook"
                          ]
                        }
                      ]
                    },
                    "definition": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "MobilePush"
                              ]
                            },
                            "title": {
                              "type": "string"
                            },
                            "body": {
                              "type": "string"
                            },
                            "imageUrl": {
                              "type": "string"
                            },
                            "android": {
                              "type": "object",
                              "properties": {
                                "notification": {
                                  "type": "object",
                                  "properties": {
                                    "channelId": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "required": [
                                "notification"
                              ]
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Email"
                              ]
                            },
                            "from": {
                              "type": "string"
                            },
                            "body": {
                              "type": "string"
                            },
                            "subject": {
                              "type": "string"
                            },
                            "replyTo": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "from",
                            "body",
                            "subject"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Sms"
                              ]
                            },
                            "body": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "body"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Webhook"
                              ]
                            },
                            "identifierKey": {
                              "type": "string"
                            },
                            "body": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "identifierKey",
                            "body"
                          ]
                        }
                      ]
                    },
                    "draft": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "MobilePush"
                              ]
                            },
                            "title": {
                              "type": "string"
                            },
                            "body": {
                              "type": "string"
                            },
                            "imageUrl": {
                              "type": "string"
                            },
                            "android": {
                              "type": "object",
                              "properties": {
                                "notification": {
                                  "type": "object",
                                  "properties": {
                                    "channelId": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "required": [
                                "notification"
                              ]
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Email"
                              ]
                            },
                            "from": {
                              "type": "string"
                            },
                            "body": {
                              "type": "string"
                            },
                            "subject": {
                              "type": "string"
                            },
                            "replyTo": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "from",
                            "body",
                            "subject"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Sms"
                              ]
                            },
                            "body": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "body"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Webhook"
                              ]
                            },
                            "identifierKey": {
                              "type": "string"
                            },
                            "body": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "identifierKey",
                            "body"
                          ]
                        }
                      ]
                    },
                    "updatedAt": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "workspaceId",
                    "id",
                    "name",
                    "type",
                    "updatedAt"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/content/templates/test": {
      "post": {
        "tags": [
          "Content"
        ],
        "description": "Send a test message for a message template.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "workspaceId": {
                        "type": "string"
                      },
                      "templateId": {
                        "type": "string"
                      },
                      "userProperties": {
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "channel": {
                        "type": "string",
                        "enum": [
                          "Email"
                        ]
                      },
                      "provider": {
                        "anyOf": [
                          {
                            "type": "string",
                            "enum": [
                              "SendGrid"
                            ]
                          },
                          {
                            "type": "string",
                            "enum": [
                              "AmazonSes"
                            ]
                          },
                          {
                            "type": "string",
                            "enum": [
                              "Resend"
                            ]
                          },
                          {
                            "type": "string",
                            "enum": [
                              "PostMark"
                            ]
                          },
                          {
                            "type": "string",
                            "enum": [
                              "Smtp"
                            ]
                          },
                          {
                            "type": "string",
                            "enum": [
                              "Test"
                            ]
                          }
                        ]
                      }
                    },
                    "required": [
                      "workspaceId",
                      "templateId",
                      "userProperties",
                      "channel"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "workspaceId": {
                        "type": "string"
                      },
                      "templateId": {
                        "type": "string"
                      },
                      "userProperties": {
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "channel": {
                        "type": "string",
                        "enum": [
                          "Sms"
                        ]
                      },
                      "provider": {
                        "anyOf": [
                          {
                            "type": "string",
                            "enum": [
                              "Twilio"
                            ]
                          },
                          {
                            "type": "string",
                            "enum": [
                              "Test"
                            ]
                          }
                        ]
                      }
                    },
                    "required": [
                      "workspaceId",
                      "templateId",
                      "userProperties",
                      "channel"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "workspaceId": {
                        "type": "string"
                      },
                      "templateId": {
                        "type": "string"
                      },
                      "userProperties": {
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "channel": {
                        "type": "string",
                        "enum": [
                          "MobilePush"
                        ]
                      },
                      "provider": {
                        "anyOf": [
                          {
                            "type": "string",
                            "enum": [
                              "Firebase"
                            ]
                          },
                          {
                            "type": "string",
                            "enum": [
                              "Test"
                            ]
                          }
                        ]
                      }
                    },
                    "required": [
                      "workspaceId",
                      "templateId",
                      "userProperties",
                      "channel"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "workspaceId": {
                        "type": "string"
                      },
                      "templateId": {
                        "type": "string"
                      },
                      "userProperties": {
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "channel": {
                        "type": "string",
                        "enum": [
                          "Webhook"
                        ]
                      }
                    },
                    "required": [
                      "workspaceId",
                      "templateId",
                      "userProperties",
                      "channel"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "Ok"
                          ]
                        },
                        "value": {
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "DFInternalMessageSent"
                                  ]
                                },
                                "variant": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "Email"
                                          ]
                                        },
                                        "provider": {
                                          "anyOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "SendGrid"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "AmazonSes"
                                                  ]
                                                },
                                                "messageId": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "PostMark"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Resend"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Smtp"
                                                  ]
                                                },
                                                "messageId": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "messageId"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Test"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ]
                                            }
                                          ]
                                        },
                                        "to": {
                                          "type": "string"
                                        },
                                        "headers": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "from": {
                                          "type": "string"
                                        },
                                        "body": {
                                          "type": "string"
                                        },
                                        "subject": {
                                          "type": "string"
                                        },
                                        "replyTo": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "provider",
                                        "to",
                                        "from",
                                        "body",
                                        "subject"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "Sms"
                                          ]
                                        },
                                        "provider": {
                                          "anyOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Twilio"
                                                  ]
                                                },
                                                "sid": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "sid"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Test"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ]
                                            }
                                          ]
                                        },
                                        "to": {
                                          "type": "string"
                                        },
                                        "body": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "provider",
                                        "to",
                                        "body"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "Webhook"
                                          ]
                                        },
                                        "to": {
                                          "type": "string"
                                        },
                                        "request": {
                                          "type": "object",
                                          "properties": {
                                            "url": {
                                              "type": "string"
                                            },
                                            "method": {
                                              "type": "string"
                                            },
                                            "headers": {
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            },
                                            "params": {},
                                            "data": {},
                                            "responseType": {
                                              "anyOf": [
                                                {
                                                  "type": "string",
                                                  "enum": [
                                                    "json"
                                                  ]
                                                },
                                                {
                                                  "type": "string",
                                                  "enum": [
                                                    "text"
                                                  ]
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "response": {
                                          "type": "object",
                                          "properties": {
                                            "status": {
                                              "type": "number"
                                            },
                                            "headers": {
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            },
                                            "body": {}
                                          },
                                          "required": [
                                            "body"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "to",
                                        "request",
                                        "response"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "type",
                                "variant"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "DFMessageSkipped"
                                  ]
                                },
                                "message": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type"
                              ]
                            }
                          ]
                        }
                      },
                      "required": [
                        "type",
                        "value"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "Err"
                          ]
                        },
                        "err": {
                          "type": "object",
                          "properties": {
                            "suggestions": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "responseData": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "suggestions"
                          ]
                        }
                      },
                      "required": [
                        "type",
                        "err"
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/events/": {
      "get": {
        "tags": [
          "Events"
        ],
        "description": "Get list of events",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "workspaceId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "searchTerm",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "examples": {
              "1043": {
                "value": "1043"
              },
              "user-123": {
                "value": "user-123"
              },
              "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b": {
                "value": "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b"
              }
            },
            "in": "query",
            "name": "userId",
            "required": false,
            "description": "Unique identifier for the user. Should be the id of the user in your system. Only applicable to logged in users."
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "offset",
            "required": true
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "limit",
            "required": true
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "startDate",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "endDate",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "events": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "messageId": {
                            "type": "string"
                          },
                          "eventType": {
                            "type": "string"
                          },
                          "event": {
                            "type": "string"
                          },
                          "userId": {
                            "anyOf": [
                              {
                                "description": "Unique identifier for the user. Should be the id of the user in your system. Only applicable to logged in users.",
                                "examples": [
                                  "1043",
                                  "user-123",
                                  "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b"
                                ],
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "anonymousId": {
                            "anyOf": [
                              {
                                "description": "Identifier for a logged out user. It can be any pseudo-unique identifier, for example a session Id or a UUID.",
                                "examples": [
                                  "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b",
                                  "session-123"
                                ],
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "processingTime": {
                            "type": "string"
                          },
                          "eventTime": {
                            "type": "string"
                          },
                          "traits": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "messageId",
                          "eventType",
                          "event",
                          "userId",
                          "anonymousId",
                          "processingTime",
                          "eventTime",
                          "traits"
                        ]
                      }
                    },
                    "count": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "events",
                    "count"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/events/traits": {
      "get": {
        "tags": [
          "Events"
        ],
        "description": "Get list of traits available on identify calls",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "workspaceId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "traits": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "traits"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/journeys/": {
      "put": {
        "tags": [
          "Journeys"
        ],
        "description": "Create or update a journey.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "allOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "workspaceId": {
                    "allOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "name": {
                    "type": "string"
                  },
                  "canRunMultiple": {
                    "type": "boolean"
                  },
                  "updatedAt": {
                    "type": "number"
                  },
                  "definition": {
                    "type": "object",
                    "properties": {
                      "entryNode": {
                        "anyOf": [
                          {
                            "title": "Segment Entry Node",
                            "description": "The first node in a journey, which limits it to a specific segment.",
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "EntryNode"
                                ]
                              },
                              "segment": {
                                "type": "string"
                              },
                              "child": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "segment",
                              "child"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "EventEntryNode"
                                ]
                              },
                              "event": {
                                "type": "string"
                              },
                              "child": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "event",
                              "child"
                            ]
                          }
                        ]
                      },
                      "exitNode": {
                        "title": "Exit Node",
                        "description": "Defines when a user exits a journey. Allows users to re-enter the journey, under some set of conditions.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "ExitNode"
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "nodes": {
                        "type": "array",
                        "items": {
                          "anyOf": [
                            {
                              "title": "Delay Node",
                              "description": "Delays a users progression through the journey for either a set amount of time, or until a specific date time.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "DelayNode"
                                  ]
                                },
                                "variant": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "Second"
                                          ]
                                        },
                                        "seconds": {
                                          "type": "number"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "seconds"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "LocalTime"
                                          ]
                                        },
                                        "minute": {
                                          "type": "number"
                                        },
                                        "hour": {
                                          "type": "number"
                                        },
                                        "allowedDaysOfWeek": {
                                          "type": "array",
                                          "items": {
                                            "anyOf": [
                                              {
                                                "const": 0,
                                                "type": "number"
                                              },
                                              {
                                                "type": "number",
                                                "enum": [
                                                  1
                                                ]
                                              },
                                              {
                                                "type": "number",
                                                "enum": [
                                                  2
                                                ]
                                              },
                                              {
                                                "type": "number",
                                                "enum": [
                                                  3
                                                ]
                                              },
                                              {
                                                "type": "number",
                                                "enum": [
                                                  4
                                                ]
                                              },
                                              {
                                                "type": "number",
                                                "enum": [
                                                  5
                                                ]
                                              },
                                              {
                                                "type": "number",
                                                "enum": [
                                                  6
                                                ]
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "hour"
                                      ]
                                    }
                                  ]
                                },
                                "child": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "type",
                                "variant",
                                "child"
                              ]
                            },
                            {
                              "title": "Rate Limit Node",
                              "description": "Used to limit the frequency with which users are contacted by a given Journey.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "RateLimitNode"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            {
                              "title": "Segment Split Node",
                              "description": "Used to split users among audiences, based on the behavior and attributes.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "SegmentSplitNode"
                                  ]
                                },
                                "variant": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Boolean"
                                      ]
                                    },
                                    "segment": {
                                      "type": "string"
                                    },
                                    "trueChild": {
                                      "type": "string"
                                    },
                                    "falseChild": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "segment",
                                    "trueChild",
                                    "falseChild"
                                  ]
                                },
                                "name": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "type",
                                "variant"
                              ]
                            },
                            {
                              "title": "Message Node",
                              "description": "Used to contact a user on a message channel.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "MessageNode"
                                  ]
                                },
                                "name": {
                                  "type": "string"
                                },
                                "subscriptionGroupId": {
                                  "type": "string"
                                },
                                "variant": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "Email"
                                          ]
                                        },
                                        "templateId": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "templateId"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "MobilePush"
                                          ]
                                        },
                                        "templateId": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "templateId"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "Sms"
                                          ]
                                        },
                                        "templateId": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "templateId"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "Webhook"
                                          ]
                                        },
                                        "templateId": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "templateId"
                                      ]
                                    }
                                  ]
                                },
                                "child": {
                                  "type": "string"
                                },
                                "syncProperties": {
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "id",
                                "type",
                                "variant",
                                "child"
                              ]
                            },
                            {
                              "title": "Experiment Split Node",
                              "description": "Used to split users among experiment paths, to test their effectiveness.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "ExperimentSplitNode"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            {
                              "title": "Wait For Node",
                              "description": "A node which waits for a user to enter a segment before progressing.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "WaitForNode"
                                  ]
                                },
                                "timeoutSeconds": {
                                  "type": "number"
                                },
                                "timeoutChild": {
                                  "type": "string"
                                },
                                "segmentChildren": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "segmentId": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "segmentId"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "type",
                                "timeoutSeconds",
                                "timeoutChild",
                                "segmentChildren"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "entryNode",
                      "exitNode",
                      "nodes"
                    ]
                  },
                  "status": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "NotStarted"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "Running"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "Paused"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "Broadcast"
                        ]
                      }
                    ]
                  },
                  "draft": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "nodes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "data": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "JourneyUiNodeDefinitionProps"
                                          ]
                                        },
                                        "nodeTypeProps": {
                                          "anyOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "EntryUiNode"
                                                  ]
                                                },
                                                "variant": {
                                                  "anyOf": [
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "segment": {
                                                          "type": "string"
                                                        },
                                                        "child": {
                                                          "type": "string"
                                                        },
                                                        "type": {
                                                          "type": "string",
                                                          "enum": [
                                                            "EntryNode"
                                                          ]
                                                        }
                                                      },
                                                      "required": [
                                                        "type"
                                                      ]
                                                    },
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "event": {
                                                          "type": "string"
                                                        },
                                                        "child": {
                                                          "type": "string"
                                                        },
                                                        "type": {
                                                          "type": "string",
                                                          "enum": [
                                                            "EventEntryNode"
                                                          ]
                                                        }
                                                      },
                                                      "required": [
                                                        "type"
                                                      ]
                                                    }
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "variant"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "ExitNode"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ]
                                            },
                                            {
                                              "anyOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "MessageNode"
                                                      ]
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "templateId": {
                                                      "type": "string"
                                                    },
                                                    "channel": {
                                                      "anyOf": [
                                                        {
                                                          "type": "string",
                                                          "enum": [
                                                            "Email"
                                                          ]
                                                        },
                                                        {
                                                          "type": "string",
                                                          "enum": [
                                                            "MobilePush"
                                                          ]
                                                        },
                                                        {
                                                          "type": "string",
                                                          "enum": [
                                                            "Sms"
                                                          ]
                                                        },
                                                        {
                                                          "type": "string",
                                                          "enum": [
                                                            "Webhook"
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    "subscriptionGroupId": {
                                                      "type": "string"
                                                    },
                                                    "syncProperties": {
                                                      "type": "boolean"
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "name",
                                                    "channel"
                                                  ]
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "DelayNode"
                                                      ]
                                                    },
                                                    "variant": {
                                                      "anyOf": [
                                                        {
                                                          "type": "object",
                                                          "properties": {
                                                            "minute": {
                                                              "type": "number"
                                                            },
                                                            "hour": {
                                                              "type": "number"
                                                            },
                                                            "allowedDaysOfWeek": {
                                                              "type": "array",
                                                              "items": {
                                                                "anyOf": [
                                                                  {
                                                                    "const": 0,
                                                                    "type": "number"
                                                                  },
                                                                  {
                                                                    "type": "number",
                                                                    "enum": [
                                                                      1
                                                                    ]
                                                                  },
                                                                  {
                                                                    "type": "number",
                                                                    "enum": [
                                                                      2
                                                                    ]
                                                                  },
                                                                  {
                                                                    "type": "number",
                                                                    "enum": [
                                                                      3
                                                                    ]
                                                                  },
                                                                  {
                                                                    "type": "number",
                                                                    "enum": [
                                                                      4
                                                                    ]
                                                                  },
                                                                  {
                                                                    "type": "number",
                                                                    "enum": [
                                                                      5
                                                                    ]
                                                                  },
                                                                  {
                                                                    "type": "number",
                                                                    "enum": [
                                                                      6
                                                                    ]
                                                                  }
                                                                ]
                                                              }
                                                            },
                                                            "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                "LocalTime"
                                                              ]
                                                            }
                                                          },
                                                          "required": [
                                                            "type"
                                                          ]
                                                        },
                                                        {
                                                          "type": "object",
                                                          "properties": {
                                                            "seconds": {
                                                              "type": "number"
                                                            },
                                                            "type": {
                                                              "type": "string",
                                                              "enum": [
                                                                "Second"
                                                              ]
                                                            }
                                                          },
                                                          "required": [
                                                            "type"
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "variant"
                                                  ]
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "SegmentSplitNode"
                                                      ]
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "segmentId": {
                                                      "type": "string"
                                                    },
                                                    "trueLabelNodeId": {
                                                      "type": "string"
                                                    },
                                                    "falseLabelNodeId": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "name",
                                                    "trueLabelNodeId",
                                                    "falseLabelNodeId"
                                                  ]
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "WaitForNode"
                                                      ]
                                                    },
                                                    "timeoutSeconds": {
                                                      "type": "number"
                                                    },
                                                    "timeoutLabelNodeId": {
                                                      "type": "string"
                                                    },
                                                    "segmentChildren": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "labelNodeId": {
                                                            "type": "string"
                                                          },
                                                          "segmentId": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "required": [
                                                          "labelNodeId"
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "timeoutLabelNodeId",
                                                    "segmentChildren"
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "nodeTypeProps"
                                      ]
                                    },
                                    {
                                      "anyOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "JourneyUiNodeLabelProps"
                                              ]
                                            },
                                            "title": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "title"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "JourneyUiNodeEmptyProps"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "type"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "data"
                              ]
                            }
                          },
                          "edges": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "source": {
                                  "type": "string"
                                },
                                "target": {
                                  "type": "string"
                                },
                                "data": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "JourneyUiDefinitionEdgeProps"
                                          ]
                                        },
                                        "disableMarker": {
                                          "type": "boolean"
                                        }
                                      },
                                      "required": [
                                        "type"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "JourneyUiPlaceholderEdgeProps"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "type"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "source",
                                "target",
                                "data"
                              ]
                            }
                          }
                        },
                        "required": [
                          "nodes",
                          "edges"
                        ]
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                },
                "required": [
                  "id",
                  "workspaceId"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "workspaceId": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "canRunMultiple": {
                          "type": "boolean"
                        },
                        "updatedAt": {
                          "allOf": [
                            {
                              "type": "number"
                            },
                            {
                              "type": "number"
                            }
                          ]
                        },
                        "draft": {
                          "type": "object",
                          "properties": {
                            "nodes": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "data": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "JourneyUiNodeDefinitionProps"
                                            ]
                                          },
                                          "nodeTypeProps": {
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "EntryUiNode"
                                                    ]
                                                  },
                                                  "variant": {
                                                    "anyOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "segment": {
                                                            "type": "string"
                                                          },
                                                          "child": {
                                                            "type": "string"
                                                          },
                                                          "type": {
                                                            "type": "string",
                                                            "enum": [
                                                              "EntryNode"
                                                            ]
                                                          }
                                                        },
                                                        "required": [
                                                          "type"
                                                        ]
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "event": {
                                                            "type": "string"
                                                          },
                                                          "child": {
                                                            "type": "string"
                                                          },
                                                          "type": {
                                                            "type": "string",
                                                            "enum": [
                                                              "EventEntryNode"
                                                            ]
                                                          }
                                                        },
                                                        "required": [
                                                          "type"
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "variant"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "ExitNode"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ]
                                              },
                                              {
                                                "anyOf": [
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "MessageNode"
                                                        ]
                                                      },
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "templateId": {
                                                        "type": "string"
                                                      },
                                                      "channel": {
                                                        "anyOf": [
                                                          {
                                                            "type": "string",
                                                            "enum": [
                                                              "Email"
                                                            ]
                                                          },
                                                          {
                                                            "type": "string",
                                                            "enum": [
                                                              "MobilePush"
                                                            ]
                                                          },
                                                          {
                                                            "type": "string",
                                                            "enum": [
                                                              "Sms"
                                                            ]
                                                          },
                                                          {
                                                            "type": "string",
                                                            "enum": [
                                                              "Webhook"
                                                            ]
                                                          }
                                                        ]
                                                      },
                                                      "subscriptionGroupId": {
                                                        "type": "string"
                                                      },
                                                      "syncProperties": {
                                                        "type": "boolean"
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "name",
                                                      "channel"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "DelayNode"
                                                        ]
                                                      },
                                                      "variant": {
                                                        "anyOf": [
                                                          {
                                                            "type": "object",
                                                            "properties": {
                                                              "minute": {
                                                                "type": "number"
                                                              },
                                                              "hour": {
                                                                "type": "number"
                                                              },
                                                              "allowedDaysOfWeek": {
                                                                "type": "array",
                                                                "items": {
                                                                  "anyOf": [
                                                                    {
                                                                      "const": 0,
                                                                      "type": "number"
                                                                    },
                                                                    {
                                                                      "type": "number",
                                                                      "enum": [
                                                                        1
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "number",
                                                                      "enum": [
                                                                        2
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "number",
                                                                      "enum": [
                                                                        3
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "number",
                                                                      "enum": [
                                                                        4
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "number",
                                                                      "enum": [
                                                                        5
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "number",
                                                                      "enum": [
                                                                        6
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              },
                                                              "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                  "LocalTime"
                                                                ]
                                                              }
                                                            },
                                                            "required": [
                                                              "type"
                                                            ]
                                                          },
                                                          {
                                                            "type": "object",
                                                            "properties": {
                                                              "seconds": {
                                                                "type": "number"
                                                              },
                                                              "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                  "Second"
                                                                ]
                                                              }
                                                            },
                                                            "required": [
                                                              "type"
                                                            ]
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "variant"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "SegmentSplitNode"
                                                        ]
                                                      },
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "segmentId": {
                                                        "type": "string"
                                                      },
                                                      "trueLabelNodeId": {
                                                        "type": "string"
                                                      },
                                                      "falseLabelNodeId": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "name",
                                                      "trueLabelNodeId",
                                                      "falseLabelNodeId"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "WaitForNode"
                                                        ]
                                                      },
                                                      "timeoutSeconds": {
                                                        "type": "number"
                                                      },
                                                      "timeoutLabelNodeId": {
                                                        "type": "string"
                                                      },
                                                      "segmentChildren": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "labelNodeId": {
                                                              "type": "string"
                                                            },
                                                            "segmentId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "labelNodeId"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "timeoutLabelNodeId",
                                                      "segmentChildren"
                                                    ]
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "nodeTypeProps"
                                        ]
                                      },
                                      {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "JourneyUiNodeLabelProps"
                                                ]
                                              },
                                              "title": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "title"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "JourneyUiNodeEmptyProps"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type"
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "data"
                                ]
                              }
                            },
                            "edges": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "source": {
                                    "type": "string"
                                  },
                                  "target": {
                                    "type": "string"
                                  },
                                  "data": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "JourneyUiDefinitionEdgeProps"
                                            ]
                                          },
                                          "disableMarker": {
                                            "type": "boolean"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "JourneyUiPlaceholderEdgeProps"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "source",
                                  "target",
                                  "data"
                                ]
                              }
                            }
                          },
                          "required": [
                            "nodes",
                            "edges"
                          ]
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "NotStarted"
                          ]
                        },
                        "definition": {
                          "type": "object",
                          "properties": {
                            "entryNode": {
                              "anyOf": [
                                {
                                  "title": "Segment Entry Node",
                                  "description": "The first node in a journey, which limits it to a specific segment.",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "EntryNode"
                                      ]
                                    },
                                    "segment": {
                                      "type": "string"
                                    },
                                    "child": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "segment",
                                    "child"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "EventEntryNode"
                                      ]
                                    },
                                    "event": {
                                      "type": "string"
                                    },
                                    "child": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "event",
                                    "child"
                                  ]
                                }
                              ]
                            },
                            "exitNode": {
                              "title": "Exit Node",
                              "description": "Defines when a user exits a journey. Allows users to re-enter the journey, under some set of conditions.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "ExitNode"
                                  ]
                                }
                              },
                              "required": [
                                "type"
                              ]
                            },
                            "nodes": {
                              "type": "array",
                              "items": {
                                "anyOf": [
                                  {
                                    "title": "Delay Node",
                                    "description": "Delays a users progression through the journey for either a set amount of time, or until a specific date time.",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "DelayNode"
                                        ]
                                      },
                                      "variant": {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "Second"
                                                ]
                                              },
                                              "seconds": {
                                                "type": "number"
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "seconds"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "LocalTime"
                                                ]
                                              },
                                              "minute": {
                                                "type": "number"
                                              },
                                              "hour": {
                                                "type": "number"
                                              },
                                              "allowedDaysOfWeek": {
                                                "type": "array",
                                                "items": {
                                                  "anyOf": [
                                                    {
                                                      "const": 0,
                                                      "type": "number"
                                                    },
                                                    {
                                                      "type": "number",
                                                      "enum": [
                                                        1
                                                      ]
                                                    },
                                                    {
                                                      "type": "number",
                                                      "enum": [
                                                        2
                                                      ]
                                                    },
                                                    {
                                                      "type": "number",
                                                      "enum": [
                                                        3
                                                      ]
                                                    },
                                                    {
                                                      "type": "number",
                                                      "enum": [
                                                        4
                                                      ]
                                                    },
                                                    {
                                                      "type": "number",
                                                      "enum": [
                                                        5
                                                      ]
                                                    },
                                                    {
                                                      "type": "number",
                                                      "enum": [
                                                        6
                                                      ]
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "hour"
                                            ]
                                          }
                                        ]
                                      },
                                      "child": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "type",
                                      "variant",
                                      "child"
                                    ]
                                  },
                                  {
                                    "title": "Rate Limit Node",
                                    "description": "Used to limit the frequency with which users are contacted by a given Journey.",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "RateLimitNode"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "type"
                                    ]
                                  },
                                  {
                                    "title": "Segment Split Node",
                                    "description": "Used to split users among audiences, based on the behavior and attributes.",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "SegmentSplitNode"
                                        ]
                                      },
                                      "variant": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "Boolean"
                                            ]
                                          },
                                          "segment": {
                                            "type": "string"
                                          },
                                          "trueChild": {
                                            "type": "string"
                                          },
                                          "falseChild": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "segment",
                                          "trueChild",
                                          "falseChild"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "type",
                                      "variant"
                                    ]
                                  },
                                  {
                                    "title": "Message Node",
                                    "description": "Used to contact a user on a message channel.",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "MessageNode"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "subscriptionGroupId": {
                                        "type": "string"
                                      },
                                      "variant": {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "Email"
                                                ]
                                              },
                                              "templateId": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "templateId"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "MobilePush"
                                                ]
                                              },
                                              "templateId": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "templateId"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "Sms"
                                                ]
                                              },
                                              "templateId": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "templateId"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "Webhook"
                                                ]
                                              },
                                              "templateId": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "templateId"
                                            ]
                                          }
                                        ]
                                      },
                                      "child": {
                                        "type": "string"
                                      },
                                      "syncProperties": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "type",
                                      "variant",
                                      "child"
                                    ]
                                  },
                                  {
                                    "title": "Experiment Split Node",
                                    "description": "Used to split users among experiment paths, to test their effectiveness.",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "ExperimentSplitNode"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "type"
                                    ]
                                  },
                                  {
                                    "title": "Wait For Node",
                                    "description": "A node which waits for a user to enter a segment before progressing.",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "WaitForNode"
                                        ]
                                      },
                                      "timeoutSeconds": {
                                        "type": "number"
                                      },
                                      "timeoutChild": {
                                        "type": "string"
                                      },
                                      "segmentChildren": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "segmentId": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "segmentId"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "type",
                                      "timeoutSeconds",
                                      "timeoutChild",
                                      "segmentChildren"
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "required": [
                            "entryNode",
                            "exitNode",
                            "nodes"
                          ]
                        },
                        "createdAt": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "id",
                        "workspaceId",
                        "name",
                        "updatedAt",
                        "status",
                        "createdAt"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "workspaceId": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "canRunMultiple": {
                          "type": "boolean"
                        },
                        "updatedAt": {
                          "allOf": [
                            {
                              "type": "number"
                            },
                            {
                              "type": "number"
                            }
                          ]
                        },
                        "draft": {
                          "type": "object",
                          "properties": {
                            "nodes": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "data": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "JourneyUiNodeDefinitionProps"
                                            ]
                                          },
                                          "nodeTypeProps": {
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "EntryUiNode"
                                                    ]
                                                  },
                                                  "variant": {
                                                    "anyOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "segment": {
                                                            "type": "string"
                                                          },
                                                          "child": {
                                                            "type": "string"
                                                          },
                                                          "type": {
                                                            "type": "string",
                                                            "enum": [
                                                              "EntryNode"
                                                            ]
                                                          }
                                                        },
                                                        "required": [
                                                          "type"
                                                        ]
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "event": {
                                                            "type": "string"
                                                          },
                                                          "child": {
                                                            "type": "string"
                                                          },
                                                          "type": {
                                                            "type": "string",
                                                            "enum": [
                                                              "EventEntryNode"
                                                            ]
                                                          }
                                                        },
                                                        "required": [
                                                          "type"
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "variant"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "ExitNode"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ]
                                              },
                                              {
                                                "anyOf": [
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "MessageNode"
                                                        ]
                                                      },
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "templateId": {
                                                        "type": "string"
                                                      },
                                                      "channel": {
                                                        "anyOf": [
                                                          {
                                                            "type": "string",
                                                            "enum": [
                                                              "Email"
                                                            ]
                                                          },
                                                          {
                                                            "type": "string",
                                                            "enum": [
                                                              "MobilePush"
                                                            ]
                                                          },
                                                          {
                                                            "type": "string",
                                                            "enum": [
                                                              "Sms"
                                                            ]
                                                          },
                                                          {
                                                            "type": "string",
                                                            "enum": [
                                                              "Webhook"
                                                            ]
                                                          }
                                                        ]
                                                      },
                                                      "subscriptionGroupId": {
                                                        "type": "string"
                                                      },
                                                      "syncProperties": {
                                                        "type": "boolean"
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "name",
                                                      "channel"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "DelayNode"
                                                        ]
                                                      },
                                                      "variant": {
                                                        "anyOf": [
                                                          {
                                                            "type": "object",
                                                            "properties": {
                                                              "minute": {
                                                                "type": "number"
                                                              },
                                                              "hour": {
                                                                "type": "number"
                                                              },
                                                              "allowedDaysOfWeek": {
                                                                "type": "array",
                                                                "items": {
                                                                  "anyOf": [
                                                                    {
                                                                      "const": 0,
                                                                      "type": "number"
                                                                    },
                                                                    {
                                                                      "type": "number",
                                                                      "enum": [
                                                                        1
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "number",
                                                                      "enum": [
                                                                        2
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "number",
                                                                      "enum": [
                                                                        3
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "number",
                                                                      "enum": [
                                                                        4
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "number",
                                                                      "enum": [
                                                                        5
                                                                      ]
                                                                    },
                                                                    {
                                                                      "type": "number",
                                                                      "enum": [
                                                                        6
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              },
                                                              "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                  "LocalTime"
                                                                ]
                                                              }
                                                            },
                                                            "required": [
                                                              "type"
                                                            ]
                                                          },
                                                          {
                                                            "type": "object",
                                                            "properties": {
                                                              "seconds": {
                                                                "type": "number"
                                                              },
                                                              "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                  "Second"
                                                                ]
                                                              }
                                                            },
                                                            "required": [
                                                              "type"
                                                            ]
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "variant"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "SegmentSplitNode"
                                                        ]
                                                      },
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "segmentId": {
                                                        "type": "string"
                                                      },
                                                      "trueLabelNodeId": {
                                                        "type": "string"
                                                      },
                                                      "falseLabelNodeId": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "name",
                                                      "trueLabelNodeId",
                                                      "falseLabelNodeId"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "WaitForNode"
                                                        ]
                                                      },
                                                      "timeoutSeconds": {
                                                        "type": "number"
                                                      },
                                                      "timeoutLabelNodeId": {
                                                        "type": "string"
                                                      },
                                                      "segmentChildren": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "labelNodeId": {
                                                              "type": "string"
                                                            },
                                                            "segmentId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "labelNodeId"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "timeoutLabelNodeId",
                                                      "segmentChildren"
                                                    ]
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "nodeTypeProps"
                                        ]
                                      },
                                      {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "JourneyUiNodeLabelProps"
                                                ]
                                              },
                                              "title": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "title"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "JourneyUiNodeEmptyProps"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type"
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "data"
                                ]
                              }
                            },
                            "edges": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "source": {
                                    "type": "string"
                                  },
                                  "target": {
                                    "type": "string"
                                  },
                                  "data": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "JourneyUiDefinitionEdgeProps"
                                            ]
                                          },
                                          "disableMarker": {
                                            "type": "boolean"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "JourneyUiPlaceholderEdgeProps"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "source",
                                  "target",
                                  "data"
                                ]
                              }
                            }
                          },
                          "required": [
                            "nodes",
                            "edges"
                          ]
                        },
                        "status": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "Running"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "Paused"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "Broadcast"
                              ]
                            }
                          ]
                        },
                        "definition": {
                          "type": "object",
                          "properties": {
                            "entryNode": {
                              "anyOf": [
                                {
                                  "title": "Segment Entry Node",
                                  "description": "The first node in a journey, which limits it to a specific segment.",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "EntryNode"
                                      ]
                                    },
                                    "segment": {
                                      "type": "string"
                                    },
                                    "child": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "segment",
                                    "child"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "EventEntryNode"
                                      ]
                                    },
                                    "event": {
                                      "type": "string"
                                    },
                                    "child": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "event",
                                    "child"
                                  ]
                                }
                              ]
                            },
                            "exitNode": {
                              "title": "Exit Node",
                              "description": "Defines when a user exits a journey. Allows users to re-enter the journey, under some set of conditions.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "ExitNode"
                                  ]
                                }
                              },
                              "required": [
                                "type"
                              ]
                            },
                            "nodes": {
                              "type": "array",
                              "items": {
                                "anyOf": [
                                  {
                                    "title": "Delay Node",
                                    "description": "Delays a users progression through the journey for either a set amount of time, or until a specific date time.",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "DelayNode"
                                        ]
                                      },
                                      "variant": {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "Second"
                                                ]
                                              },
                                              "seconds": {
                                                "type": "number"
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "seconds"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "LocalTime"
                                                ]
                                              },
                                              "minute": {
                                                "type": "number"
                                              },
                                              "hour": {
                                                "type": "number"
                                              },
                                              "allowedDaysOfWeek": {
                                                "type": "array",
                                                "items": {
                                                  "anyOf": [
                                                    {
                                                      "const": 0,
                                                      "type": "number"
                                                    },
                                                    {
                                                      "type": "number",
                                                      "enum": [
                                                        1
                                                      ]
                                                    },
                                                    {
                                                      "type": "number",
                                                      "enum": [
                                                        2
                                                      ]
                                                    },
                                                    {
                                                      "type": "number",
                                                      "enum": [
                                                        3
                                                      ]
                                                    },
                                                    {
                                                      "type": "number",
                                                      "enum": [
                                                        4
                                                      ]
                                                    },
                                                    {
                                                      "type": "number",
                                                      "enum": [
                                                        5
                                                      ]
                                                    },
                                                    {
                                                      "type": "number",
                                                      "enum": [
                                                        6
                                                      ]
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "hour"
                                            ]
                                          }
                                        ]
                                      },
                                      "child": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "type",
                                      "variant",
                                      "child"
                                    ]
                                  },
                                  {
                                    "title": "Rate Limit Node",
                                    "description": "Used to limit the frequency with which users are contacted by a given Journey.",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "RateLimitNode"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "type"
                                    ]
                                  },
                                  {
                                    "title": "Segment Split Node",
                                    "description": "Used to split users among audiences, based on the behavior and attributes.",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "SegmentSplitNode"
                                        ]
                                      },
                                      "variant": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "Boolean"
                                            ]
                                          },
                                          "segment": {
                                            "type": "string"
                                          },
                                          "trueChild": {
                                            "type": "string"
                                          },
                                          "falseChild": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "segment",
                                          "trueChild",
                                          "falseChild"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "type",
                                      "variant"
                                    ]
                                  },
                                  {
                                    "title": "Message Node",
                                    "description": "Used to contact a user on a message channel.",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "MessageNode"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "subscriptionGroupId": {
                                        "type": "string"
                                      },
                                      "variant": {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "Email"
                                                ]
                                              },
                                              "templateId": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "templateId"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "MobilePush"
                                                ]
                                              },
                                              "templateId": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "templateId"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "Sms"
                                                ]
                                              },
                                              "templateId": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "templateId"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "Webhook"
                                                ]
                                              },
                                              "templateId": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "templateId"
                                            ]
                                          }
                                        ]
                                      },
                                      "child": {
                                        "type": "string"
                                      },
                                      "syncProperties": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "type",
                                      "variant",
                                      "child"
                                    ]
                                  },
                                  {
                                    "title": "Experiment Split Node",
                                    "description": "Used to split users among experiment paths, to test their effectiveness.",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "ExperimentSplitNode"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "type"
                                    ]
                                  },
                                  {
                                    "title": "Wait For Node",
                                    "description": "A node which waits for a user to enter a segment before progressing.",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "WaitForNode"
                                        ]
                                      },
                                      "timeoutSeconds": {
                                        "type": "number"
                                      },
                                      "timeoutChild": {
                                        "type": "string"
                                      },
                                      "segmentChildren": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "segmentId": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "segmentId"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "type",
                                      "timeoutSeconds",
                                      "timeoutChild",
                                      "segmentChildren"
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "required": [
                            "entryNode",
                            "exitNode",
                            "nodes"
                          ]
                        },
                        "createdAt": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "id",
                        "workspaceId",
                        "name",
                        "updatedAt",
                        "status",
                        "definition",
                        "createdAt"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "variant": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "ConstraintViolation"
                          ]
                        },
                        "violations": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "WaitForNodeAndEventEntryNode"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "CantStart"
                                    ]
                                  }
                                ]
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "message"
                            ]
                          }
                        }
                      },
                      "required": [
                        "type",
                        "violations"
                      ]
                    }
                  },
                  "required": [
                    "message",
                    "variant"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Journeys"
        ],
        "description": "Delete a journey.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "An empty String",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An empty String",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "An empty String",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An empty String",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/journeys/stats": {
      "get": {
        "tags": [
          "Journeys"
        ],
        "description": "Retrieve stats regarding one or more journey's performance.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "workspaceId",
            "required": true
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "journeyIds",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "journeyId": {
                        "type": "string"
                      },
                      "workspaceId": {
                        "type": "string"
                      },
                      "nodeStats": {
                        "type": "object",
                        "additionalProperties": {
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "sendRate": {
                                  "type": "number"
                                },
                                "channelStats": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "Email"
                                          ]
                                        },
                                        "deliveryRate": {
                                          "type": "number"
                                        },
                                        "openRate": {
                                          "type": "number"
                                        },
                                        "clickRate": {
                                          "type": "number"
                                        },
                                        "spamRate": {
                                          "type": "number"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "deliveryRate",
                                        "openRate",
                                        "clickRate",
                                        "spamRate"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "Sms"
                                          ]
                                        },
                                        "deliveryRate": {
                                          "type": "number"
                                        },
                                        "failRate": {
                                          "type": "number"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "deliveryRate"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "Webhook"
                                          ]
                                        },
                                        "stats": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "number"
                                          }
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "stats"
                                      ]
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "MessageNodeStats"
                                  ]
                                },
                                "proportions": {
                                  "type": "object",
                                  "properties": {
                                    "childEdge": {
                                      "type": "number"
                                    }
                                  },
                                  "required": [
                                    "childEdge"
                                  ]
                                }
                              },
                              "required": [
                                "type",
                                "proportions"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "DelayNodeStats"
                                  ]
                                },
                                "proportions": {
                                  "type": "object",
                                  "properties": {
                                    "childEdge": {
                                      "type": "number"
                                    }
                                  },
                                  "required": [
                                    "childEdge"
                                  ]
                                }
                              },
                              "required": [
                                "type",
                                "proportions"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "WaitForNodeStats"
                                  ]
                                },
                                "proportions": {
                                  "type": "object",
                                  "properties": {
                                    "segmentChildEdge": {
                                      "type": "number"
                                    }
                                  },
                                  "required": [
                                    "segmentChildEdge"
                                  ]
                                }
                              },
                              "required": [
                                "type",
                                "proportions"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "SegmentSplitNodeStats"
                                  ]
                                },
                                "proportions": {
                                  "type": "object",
                                  "properties": {
                                    "falseChildEdge": {
                                      "type": "number"
                                    }
                                  },
                                  "required": [
                                    "falseChildEdge"
                                  ]
                                }
                              },
                              "required": [
                                "type",
                                "proportions"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "journeyId",
                      "workspaceId",
                      "nodeStats"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/secrets/": {
      "get": {
        "tags": [
          "Secrets"
        ],
        "description": "List secrets.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "workspaceId",
            "required": true
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "names",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      },
                      "workspaceId": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "value",
                      "workspaceId"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Secrets"
        ],
        "description": "Create or update a secret. Will patch the secret definition if passed.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  },
                  "configValue": {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  "workspaceId": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "workspaceId"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "An empty String",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An empty String",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Secrets"
        ],
        "description": "Delete a secret.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "id",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "workspaceId",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "An empty String",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An empty String",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/segments/": {
      "put": {
        "tags": [
          "Segments"
        ],
        "description": "Create or update a user segment.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "workspaceId": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "definition": {
                        "type": "object",
                        "properties": {
                          "entryNode": {
                            "anyOf": [
                              {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "Trait"
                                        ]
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "operator": {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "Within"
                                                ]
                                              },
                                              "windowSeconds": {
                                                "type": "number"
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "windowSeconds"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "Equals"
                                                ]
                                              },
                                              "value": {
                                                "anyOf": [
                                                  {
                                                    "type": "string"
                                                  },
                                                  {
                                                    "type": "number"
                                                  }
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "value"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "NotEquals"
                                                ]
                                              },
                                              "value": {
                                                "anyOf": [
                                                  {
                                                    "type": "string"
                                                  },
                                                  {
                                                    "type": "number"
                                                  }
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "value"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "HasBeen"
                                                ]
                                              },
                                              "comparator": {
                                                "anyOf": [
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "GTE"
                                                    ]
                                                  },
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "LT"
                                                    ]
                                                  }
                                                ]
                                              },
                                              "value": {
                                                "anyOf": [
                                                  {
                                                    "type": "string"
                                                  },
                                                  {
                                                    "type": "number"
                                                  }
                                                ]
                                              },
                                              "windowSeconds": {
                                                "type": "number"
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "comparator",
                                              "value",
                                              "windowSeconds"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "Exists"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type"
                                            ]
                                          }
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id",
                                      "path",
                                      "operator"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "And"
                                        ]
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "children": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id",
                                      "children"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "Or"
                                        ]
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "children": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id",
                                      "children"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "Performed"
                                        ]
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "event": {
                                        "type": "string"
                                      },
                                      "times": {
                                        "type": "number"
                                      },
                                      "timesOperator": {
                                        "anyOf": [
                                          {
                                            "type": "string",
                                            "enum": [
                                              "="
                                            ]
                                          },
                                          {
                                            "type": "string",
                                            "enum": [
                                              ">="
                                            ]
                                          },
                                          {
                                            "type": "string",
                                            "enum": [
                                              "<"
                                            ]
                                          }
                                        ]
                                      },
                                      "withinSeconds": {
                                        "type": "number"
                                      },
                                      "properties": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "path": {
                                              "type": "string"
                                            },
                                            "operator": {
                                              "anyOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "Within"
                                                      ]
                                                    },
                                                    "windowSeconds": {
                                                      "type": "number"
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "windowSeconds"
                                                  ]
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "Equals"
                                                      ]
                                                    },
                                                    "value": {
                                                      "anyOf": [
                                                        {
                                                          "type": "string"
                                                        },
                                                        {
                                                          "type": "number"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "value"
                                                  ]
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "NotEquals"
                                                      ]
                                                    },
                                                    "value": {
                                                      "anyOf": [
                                                        {
                                                          "type": "string"
                                                        },
                                                        {
                                                          "type": "number"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "value"
                                                  ]
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "HasBeen"
                                                      ]
                                                    },
                                                    "comparator": {
                                                      "anyOf": [
                                                        {
                                                          "type": "string",
                                                          "enum": [
                                                            "GTE"
                                                          ]
                                                        },
                                                        {
                                                          "type": "string",
                                                          "enum": [
                                                            "LT"
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    "value": {
                                                      "anyOf": [
                                                        {
                                                          "type": "string"
                                                        },
                                                        {
                                                          "type": "number"
                                                        }
                                                      ]
                                                    },
                                                    "windowSeconds": {
                                                      "type": "number"
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "comparator",
                                                    "value",
                                                    "windowSeconds"
                                                  ]
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "Exists"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type"
                                                  ]
                                                }
                                              ]
                                            }
                                          },
                                          "required": [
                                            "path",
                                            "operator"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id",
                                      "event"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "LastPerformed"
                                        ]
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "event": {
                                        "type": "string"
                                      },
                                      "whereProperties": {
                                        "description": "Used to select which events are eligible to be considered.",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "path": {
                                              "type": "string"
                                            },
                                            "operator": {
                                              "anyOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "Within"
                                                      ]
                                                    },
                                                    "windowSeconds": {
                                                      "type": "number"
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "windowSeconds"
                                                  ]
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "Equals"
                                                      ]
                                                    },
                                                    "value": {
                                                      "anyOf": [
                                                        {
                                                          "type": "string"
                                                        },
                                                        {
                                                          "type": "number"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "value"
                                                  ]
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "NotEquals"
                                                      ]
                                                    },
                                                    "value": {
                                                      "anyOf": [
                                                        {
                                                          "type": "string"
                                                        },
                                                        {
                                                          "type": "number"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "value"
                                                  ]
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "HasBeen"
                                                      ]
                                                    },
                                                    "comparator": {
                                                      "anyOf": [
                                                        {
                                                          "type": "string",
                                                          "enum": [
                                                            "GTE"
                                                          ]
                                                        },
                                                        {
                                                          "type": "string",
                                                          "enum": [
                                                            "LT"
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    "value": {
                                                      "anyOf": [
                                                        {
                                                          "type": "string"
                                                        },
                                                        {
                                                          "type": "number"
                                                        }
                                                      ]
                                                    },
                                                    "windowSeconds": {
                                                      "type": "number"
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "comparator",
                                                    "value",
                                                    "windowSeconds"
                                                  ]
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "Exists"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type"
                                                  ]
                                                }
                                              ]
                                            }
                                          },
                                          "required": [
                                            "path",
                                            "operator"
                                          ]
                                        }
                                      },
                                      "hasProperties": {
                                        "description": "Used to evaluate whether the user is in the segment based on the properties of the selected event.",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "path": {
                                              "type": "string"
                                            },
                                            "operator": {
                                              "anyOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "Within"
                                                      ]
                                                    },
                                                    "windowSeconds": {
                                                      "type": "number"
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "windowSeconds"
                                                  ]
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "Equals"
                                                      ]
                                                    },
                                                    "value": {
                                                      "anyOf": [
                                                        {
                                                          "type": "string"
                                                        },
                                                        {
                                                          "type": "number"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "value"
                                                  ]
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "NotEquals"
                                                      ]
                                                    },
                                                    "value": {
                                                      "anyOf": [
                                                        {
                                                          "type": "string"
                                                        },
                                                        {
                                                          "type": "number"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "value"
                                                  ]
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "HasBeen"
                                                      ]
                                                    },
                                                    "comparator": {
                                                      "anyOf": [
                                                        {
                                                          "type": "string",
                                                          "enum": [
                                                            "GTE"
                                                          ]
                                                        },
                                                        {
                                                          "type": "string",
                                                          "enum": [
                                                            "LT"
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    "value": {
                                                      "anyOf": [
                                                        {
                                                          "type": "string"
                                                        },
                                                        {
                                                          "type": "number"
                                                        }
                                                      ]
                                                    },
                                                    "windowSeconds": {
                                                      "type": "number"
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "comparator",
                                                    "value",
                                                    "windowSeconds"
                                                  ]
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "Exists"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type"
                                                  ]
                                                }
                                              ]
                                            }
                                          },
                                          "required": [
                                            "path",
                                            "operator"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id",
                                      "event",
                                      "hasProperties"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "Email"
                                        ]
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "event": {
                                        "anyOf": [
                                          {
                                            "type": "string",
                                            "enum": [
                                              "DFInternalMessageSent"
                                            ]
                                          },
                                          {
                                            "type": "string",
                                            "enum": [
                                              "DFEmailDropped"
                                            ]
                                          },
                                          {
                                            "type": "string",
                                            "enum": [
                                              "DFEmailDelivered"
                                            ]
                                          },
                                          {
                                            "type": "string",
                                            "enum": [
                                              "DFEmailOpened"
                                            ]
                                          },
                                          {
                                            "type": "string",
                                            "enum": [
                                              "DFEmailClicked"
                                            ]
                                          },
                                          {
                                            "type": "string",
                                            "enum": [
                                              "DFEmailBounced"
                                            ]
                                          },
                                          {
                                            "type": "string",
                                            "enum": [
                                              "DFEmailMarkedSpam"
                                            ]
                                          }
                                        ]
                                      },
                                      "times": {
                                        "type": "number"
                                      },
                                      "templateId": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id",
                                      "event",
                                      "templateId"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "Broadcast"
                                        ]
                                      },
                                      "id": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "SubscriptionGroup"
                                        ]
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "subscriptionGroupId": {
                                        "type": "string"
                                      },
                                      "subscriptionGroupType": {
                                        "anyOf": [
                                          {
                                            "type": "string",
                                            "enum": [
                                              "OptIn"
                                            ]
                                          },
                                          {
                                            "type": "string",
                                            "enum": [
                                              "OptOut"
                                            ]
                                          }
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id",
                                      "subscriptionGroupId",
                                      "subscriptionGroupType"
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "Manual"
                                    ]
                                  },
                                  "version": {
                                    "type": "number"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "version",
                                  "id"
                                ]
                              }
                            ]
                          },
                          "nodes": {
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Trait"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "path": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "anyOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "Within"
                                              ]
                                            },
                                            "windowSeconds": {
                                              "type": "number"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "windowSeconds"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "Equals"
                                              ]
                                            },
                                            "value": {
                                              "anyOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "number"
                                                }
                                              ]
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "value"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "NotEquals"
                                              ]
                                            },
                                            "value": {
                                              "anyOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "number"
                                                }
                                              ]
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "value"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "HasBeen"
                                              ]
                                            },
                                            "comparator": {
                                              "anyOf": [
                                                {
                                                  "type": "string",
                                                  "enum": [
                                                    "GTE"
                                                  ]
                                                },
                                                {
                                                  "type": "string",
                                                  "enum": [
                                                    "LT"
                                                  ]
                                                }
                                              ]
                                            },
                                            "value": {
                                              "anyOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "number"
                                                }
                                              ]
                                            },
                                            "windowSeconds": {
                                              "type": "number"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "comparator",
                                            "value",
                                            "windowSeconds"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "Exists"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "type"
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id",
                                    "path",
                                    "operator"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "And"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "children": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id",
                                    "children"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Or"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "children": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id",
                                    "children"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Performed"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "event": {
                                      "type": "string"
                                    },
                                    "times": {
                                      "type": "number"
                                    },
                                    "timesOperator": {
                                      "anyOf": [
                                        {
                                          "type": "string",
                                          "enum": [
                                            "="
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            ">="
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "<"
                                          ]
                                        }
                                      ]
                                    },
                                    "withinSeconds": {
                                      "type": "number"
                                    },
                                    "properties": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "path": {
                                            "type": "string"
                                          },
                                          "operator": {
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Within"
                                                    ]
                                                  },
                                                  "windowSeconds": {
                                                    "type": "number"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "windowSeconds"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Equals"
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "value"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "NotEquals"
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "value"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "HasBeen"
                                                    ]
                                                  },
                                                  "comparator": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string",
                                                        "enum": [
                                                          "GTE"
                                                        ]
                                                      },
                                                      {
                                                        "type": "string",
                                                        "enum": [
                                                          "LT"
                                                        ]
                                                      }
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  },
                                                  "windowSeconds": {
                                                    "type": "number"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "comparator",
                                                  "value",
                                                  "windowSeconds"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Exists"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ]
                                              }
                                            ]
                                          }
                                        },
                                        "required": [
                                          "path",
                                          "operator"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id",
                                    "event"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "LastPerformed"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "event": {
                                      "type": "string"
                                    },
                                    "whereProperties": {
                                      "description": "Used to select which events are eligible to be considered.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "path": {
                                            "type": "string"
                                          },
                                          "operator": {
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Within"
                                                    ]
                                                  },
                                                  "windowSeconds": {
                                                    "type": "number"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "windowSeconds"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Equals"
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "value"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "NotEquals"
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "value"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "HasBeen"
                                                    ]
                                                  },
                                                  "comparator": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string",
                                                        "enum": [
                                                          "GTE"
                                                        ]
                                                      },
                                                      {
                                                        "type": "string",
                                                        "enum": [
                                                          "LT"
                                                        ]
                                                      }
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  },
                                                  "windowSeconds": {
                                                    "type": "number"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "comparator",
                                                  "value",
                                                  "windowSeconds"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Exists"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ]
                                              }
                                            ]
                                          }
                                        },
                                        "required": [
                                          "path",
                                          "operator"
                                        ]
                                      }
                                    },
                                    "hasProperties": {
                                      "description": "Used to evaluate whether the user is in the segment based on the properties of the selected event.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "path": {
                                            "type": "string"
                                          },
                                          "operator": {
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Within"
                                                    ]
                                                  },
                                                  "windowSeconds": {
                                                    "type": "number"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "windowSeconds"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Equals"
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "value"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "NotEquals"
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "value"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "HasBeen"
                                                    ]
                                                  },
                                                  "comparator": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string",
                                                        "enum": [
                                                          "GTE"
                                                        ]
                                                      },
                                                      {
                                                        "type": "string",
                                                        "enum": [
                                                          "LT"
                                                        ]
                                                      }
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  },
                                                  "windowSeconds": {
                                                    "type": "number"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "comparator",
                                                  "value",
                                                  "windowSeconds"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Exists"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ]
                                              }
                                            ]
                                          }
                                        },
                                        "required": [
                                          "path",
                                          "operator"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id",
                                    "event",
                                    "hasProperties"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Email"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "event": {
                                      "anyOf": [
                                        {
                                          "type": "string",
                                          "enum": [
                                            "DFInternalMessageSent"
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "DFEmailDropped"
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "DFEmailDelivered"
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "DFEmailOpened"
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "DFEmailClicked"
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "DFEmailBounced"
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "DFEmailMarkedSpam"
                                          ]
                                        }
                                      ]
                                    },
                                    "times": {
                                      "type": "number"
                                    },
                                    "templateId": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id",
                                    "event",
                                    "templateId"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Broadcast"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "SubscriptionGroup"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "subscriptionGroupId": {
                                      "type": "string"
                                    },
                                    "subscriptionGroupType": {
                                      "anyOf": [
                                        {
                                          "type": "string",
                                          "enum": [
                                            "OptIn"
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "OptOut"
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id",
                                    "subscriptionGroupId",
                                    "subscriptionGroupType"
                                  ]
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "entryNode",
                          "nodes"
                        ]
                      },
                      "subscriptionGroupId": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "number"
                      },
                      "lastRecomputed": {
                        "type": "number"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "definition": {
                      "type": "object",
                      "properties": {
                        "entryNode": {
                          "anyOf": [
                            {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Trait"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "path": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "anyOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "Within"
                                              ]
                                            },
                                            "windowSeconds": {
                                              "type": "number"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "windowSeconds"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "Equals"
                                              ]
                                            },
                                            "value": {
                                              "anyOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "number"
                                                }
                                              ]
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "value"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "NotEquals"
                                              ]
                                            },
                                            "value": {
                                              "anyOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "number"
                                                }
                                              ]
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "value"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "HasBeen"
                                              ]
                                            },
                                            "comparator": {
                                              "anyOf": [
                                                {
                                                  "type": "string",
                                                  "enum": [
                                                    "GTE"
                                                  ]
                                                },
                                                {
                                                  "type": "string",
                                                  "enum": [
                                                    "LT"
                                                  ]
                                                }
                                              ]
                                            },
                                            "value": {
                                              "anyOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "number"
                                                }
                                              ]
                                            },
                                            "windowSeconds": {
                                              "type": "number"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "comparator",
                                            "value",
                                            "windowSeconds"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "Exists"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "type"
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id",
                                    "path",
                                    "operator"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "And"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "children": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id",
                                    "children"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Or"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "children": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id",
                                    "children"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Performed"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "event": {
                                      "type": "string"
                                    },
                                    "times": {
                                      "type": "number"
                                    },
                                    "timesOperator": {
                                      "anyOf": [
                                        {
                                          "type": "string",
                                          "enum": [
                                            "="
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            ">="
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "<"
                                          ]
                                        }
                                      ]
                                    },
                                    "withinSeconds": {
                                      "type": "number"
                                    },
                                    "properties": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "path": {
                                            "type": "string"
                                          },
                                          "operator": {
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Within"
                                                    ]
                                                  },
                                                  "windowSeconds": {
                                                    "type": "number"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "windowSeconds"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Equals"
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "value"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "NotEquals"
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "value"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "HasBeen"
                                                    ]
                                                  },
                                                  "comparator": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string",
                                                        "enum": [
                                                          "GTE"
                                                        ]
                                                      },
                                                      {
                                                        "type": "string",
                                                        "enum": [
                                                          "LT"
                                                        ]
                                                      }
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  },
                                                  "windowSeconds": {
                                                    "type": "number"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "comparator",
                                                  "value",
                                                  "windowSeconds"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Exists"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ]
                                              }
                                            ]
                                          }
                                        },
                                        "required": [
                                          "path",
                                          "operator"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id",
                                    "event"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "LastPerformed"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "event": {
                                      "type": "string"
                                    },
                                    "whereProperties": {
                                      "description": "Used to select which events are eligible to be considered.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "path": {
                                            "type": "string"
                                          },
                                          "operator": {
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Within"
                                                    ]
                                                  },
                                                  "windowSeconds": {
                                                    "type": "number"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "windowSeconds"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Equals"
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "value"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "NotEquals"
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "value"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "HasBeen"
                                                    ]
                                                  },
                                                  "comparator": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string",
                                                        "enum": [
                                                          "GTE"
                                                        ]
                                                      },
                                                      {
                                                        "type": "string",
                                                        "enum": [
                                                          "LT"
                                                        ]
                                                      }
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  },
                                                  "windowSeconds": {
                                                    "type": "number"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "comparator",
                                                  "value",
                                                  "windowSeconds"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Exists"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ]
                                              }
                                            ]
                                          }
                                        },
                                        "required": [
                                          "path",
                                          "operator"
                                        ]
                                      }
                                    },
                                    "hasProperties": {
                                      "description": "Used to evaluate whether the user is in the segment based on the properties of the selected event.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "path": {
                                            "type": "string"
                                          },
                                          "operator": {
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Within"
                                                    ]
                                                  },
                                                  "windowSeconds": {
                                                    "type": "number"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "windowSeconds"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Equals"
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "value"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "NotEquals"
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "value"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "HasBeen"
                                                    ]
                                                  },
                                                  "comparator": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string",
                                                        "enum": [
                                                          "GTE"
                                                        ]
                                                      },
                                                      {
                                                        "type": "string",
                                                        "enum": [
                                                          "LT"
                                                        ]
                                                      }
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  },
                                                  "windowSeconds": {
                                                    "type": "number"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "comparator",
                                                  "value",
                                                  "windowSeconds"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Exists"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ]
                                              }
                                            ]
                                          }
                                        },
                                        "required": [
                                          "path",
                                          "operator"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id",
                                    "event",
                                    "hasProperties"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Email"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "event": {
                                      "anyOf": [
                                        {
                                          "type": "string",
                                          "enum": [
                                            "DFInternalMessageSent"
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "DFEmailDropped"
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "DFEmailDelivered"
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "DFEmailOpened"
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "DFEmailClicked"
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "DFEmailBounced"
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "DFEmailMarkedSpam"
                                          ]
                                        }
                                      ]
                                    },
                                    "times": {
                                      "type": "number"
                                    },
                                    "templateId": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id",
                                    "event",
                                    "templateId"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Broadcast"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "SubscriptionGroup"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "subscriptionGroupId": {
                                      "type": "string"
                                    },
                                    "subscriptionGroupType": {
                                      "anyOf": [
                                        {
                                          "type": "string",
                                          "enum": [
                                            "OptIn"
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "OptOut"
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id",
                                    "subscriptionGroupId",
                                    "subscriptionGroupType"
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "Manual"
                                  ]
                                },
                                "version": {
                                  "type": "number"
                                },
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type",
                                "version",
                                "id"
                              ]
                            }
                          ]
                        },
                        "nodes": {
                          "type": "array",
                          "items": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "Trait"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "operator": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "Within"
                                            ]
                                          },
                                          "windowSeconds": {
                                            "type": "number"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "windowSeconds"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "Equals"
                                            ]
                                          },
                                          "value": {
                                            "anyOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "number"
                                              }
                                            ]
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "value"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "NotEquals"
                                            ]
                                          },
                                          "value": {
                                            "anyOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "number"
                                              }
                                            ]
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "value"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "HasBeen"
                                            ]
                                          },
                                          "comparator": {
                                            "anyOf": [
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "GTE"
                                                ]
                                              },
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "LT"
                                                ]
                                              }
                                            ]
                                          },
                                          "value": {
                                            "anyOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "number"
                                              }
                                            ]
                                          },
                                          "windowSeconds": {
                                            "type": "number"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "comparator",
                                          "value",
                                          "windowSeconds"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "Exists"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "type",
                                  "id",
                                  "path",
                                  "operator"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "And"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "children": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "required": [
                                  "type",
                                  "id",
                                  "children"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "Or"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "children": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "required": [
                                  "type",
                                  "id",
                                  "children"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "Performed"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "event": {
                                    "type": "string"
                                  },
                                  "times": {
                                    "type": "number"
                                  },
                                  "timesOperator": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "="
                                        ]
                                      },
                                      {
                                        "type": "string",
                                        "enum": [
                                          ">="
                                        ]
                                      },
                                      {
                                        "type": "string",
                                        "enum": [
                                          "<"
                                        ]
                                      }
                                    ]
                                  },
                                  "withinSeconds": {
                                    "type": "number"
                                  },
                                  "properties": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "anyOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Within"
                                                  ]
                                                },
                                                "windowSeconds": {
                                                  "type": "number"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "windowSeconds"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Equals"
                                                  ]
                                                },
                                                "value": {
                                                  "anyOf": [
                                                    {
                                                      "type": "string"
                                                    },
                                                    {
                                                      "type": "number"
                                                    }
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "value"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "NotEquals"
                                                  ]
                                                },
                                                "value": {
                                                  "anyOf": [
                                                    {
                                                      "type": "string"
                                                    },
                                                    {
                                                      "type": "number"
                                                    }
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "value"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "HasBeen"
                                                  ]
                                                },
                                                "comparator": {
                                                  "anyOf": [
                                                    {
                                                      "type": "string",
                                                      "enum": [
                                                        "GTE"
                                                      ]
                                                    },
                                                    {
                                                      "type": "string",
                                                      "enum": [
                                                        "LT"
                                                      ]
                                                    }
                                                  ]
                                                },
                                                "value": {
                                                  "anyOf": [
                                                    {
                                                      "type": "string"
                                                    },
                                                    {
                                                      "type": "number"
                                                    }
                                                  ]
                                                },
                                                "windowSeconds": {
                                                  "type": "number"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "comparator",
                                                "value",
                                                "windowSeconds"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Exists"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      "required": [
                                        "path",
                                        "operator"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "type",
                                  "id",
                                  "event"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "LastPerformed"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "event": {
                                    "type": "string"
                                  },
                                  "whereProperties": {
                                    "description": "Used to select which events are eligible to be considered.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "anyOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Within"
                                                  ]
                                                },
                                                "windowSeconds": {
                                                  "type": "number"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "windowSeconds"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Equals"
                                                  ]
                                                },
                                                "value": {
                                                  "anyOf": [
                                                    {
                                                      "type": "string"
                                                    },
                                                    {
                                                      "type": "number"
                                                    }
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "value"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "NotEquals"
                                                  ]
                                                },
                                                "value": {
                                                  "anyOf": [
                                                    {
                                                      "type": "string"
                                                    },
                                                    {
                                                      "type": "number"
                                                    }
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "value"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "HasBeen"
                                                  ]
                                                },
                                                "comparator": {
                                                  "anyOf": [
                                                    {
                                                      "type": "string",
                                                      "enum": [
                                                        "GTE"
                                                      ]
                                                    },
                                                    {
                                                      "type": "string",
                                                      "enum": [
                                                        "LT"
                                                      ]
                                                    }
                                                  ]
                                                },
                                                "value": {
                                                  "anyOf": [
                                                    {
                                                      "type": "string"
                                                    },
                                                    {
                                                      "type": "number"
                                                    }
                                                  ]
                                                },
                                                "windowSeconds": {
                                                  "type": "number"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "comparator",
                                                "value",
                                                "windowSeconds"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Exists"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      "required": [
                                        "path",
                                        "operator"
                                      ]
                                    }
                                  },
                                  "hasProperties": {
                                    "description": "Used to evaluate whether the user is in the segment based on the properties of the selected event.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "anyOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Within"
                                                  ]
                                                },
                                                "windowSeconds": {
                                                  "type": "number"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "windowSeconds"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Equals"
                                                  ]
                                                },
                                                "value": {
                                                  "anyOf": [
                                                    {
                                                      "type": "string"
                                                    },
                                                    {
                                                      "type": "number"
                                                    }
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "value"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "NotEquals"
                                                  ]
                                                },
                                                "value": {
                                                  "anyOf": [
                                                    {
                                                      "type": "string"
                                                    },
                                                    {
                                                      "type": "number"
                                                    }
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "value"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "HasBeen"
                                                  ]
                                                },
                                                "comparator": {
                                                  "anyOf": [
                                                    {
                                                      "type": "string",
                                                      "enum": [
                                                        "GTE"
                                                      ]
                                                    },
                                                    {
                                                      "type": "string",
                                                      "enum": [
                                                        "LT"
                                                      ]
                                                    }
                                                  ]
                                                },
                                                "value": {
                                                  "anyOf": [
                                                    {
                                                      "type": "string"
                                                    },
                                                    {
                                                      "type": "number"
                                                    }
                                                  ]
                                                },
                                                "windowSeconds": {
                                                  "type": "number"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "comparator",
                                                "value",
                                                "windowSeconds"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Exists"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      "required": [
                                        "path",
                                        "operator"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "type",
                                  "id",
                                  "event",
                                  "hasProperties"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "Email"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "event": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "DFInternalMessageSent"
                                        ]
                                      },
                                      {
                                        "type": "string",
                                        "enum": [
                                          "DFEmailDropped"
                                        ]
                                      },
                                      {
                                        "type": "string",
                                        "enum": [
                                          "DFEmailDelivered"
                                        ]
                                      },
                                      {
                                        "type": "string",
                                        "enum": [
                                          "DFEmailOpened"
                                        ]
                                      },
                                      {
                                        "type": "string",
                                        "enum": [
                                          "DFEmailClicked"
                                        ]
                                      },
                                      {
                                        "type": "string",
                                        "enum": [
                                          "DFEmailBounced"
                                        ]
                                      },
                                      {
                                        "type": "string",
                                        "enum": [
                                          "DFEmailMarkedSpam"
                                        ]
                                      }
                                    ]
                                  },
                                  "times": {
                                    "type": "number"
                                  },
                                  "templateId": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id",
                                  "event",
                                  "templateId"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "Broadcast"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "SubscriptionGroup"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "subscriptionGroupId": {
                                    "type": "string"
                                  },
                                  "subscriptionGroupType": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "OptIn"
                                        ]
                                      },
                                      {
                                        "type": "string",
                                        "enum": [
                                          "OptOut"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "type",
                                  "id",
                                  "subscriptionGroupId",
                                  "subscriptionGroupType"
                                ]
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "entryNode",
                        "nodes"
                      ]
                    },
                    "subscriptionGroupId": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "allOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    "lastRecomputed": {
                      "type": "number"
                    },
                    "createdAt": {
                      "type": "number"
                    },
                    "definitionUpdatedAt": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "id",
                    "workspaceId",
                    "name",
                    "definition",
                    "updatedAt",
                    "createdAt",
                    "definitionUpdatedAt"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Segments"
        ],
        "description": "Delete a segment.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "An empty String",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An empty String",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "An empty String",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An empty String",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/segments/download": {
      "get": {
        "tags": [
          "Segments"
        ],
        "description": "Download a csv containing segment assignments.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "workspaceId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/segments/upload-csv": {
      "post": {
        "tags": [
          "Segments"
        ],
        "description": "Upload a CSV file to add or remove users from a manual segment.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "df-workspace-id",
            "required": true,
            "description": "Id of the workspace which will receive the segment payload. Defaults to the default workspace id, for single tenant systems"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "df-segment-id",
            "required": true
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "Add"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "Remove"
                  ]
                }
              ]
            },
            "in": "header",
            "name": "operation",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/settings/data-sources": {
      "put": {
        "tags": [
          "Settings"
        ],
        "description": "Create or update email provider settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "workspaceId": {
                    "type": "string"
                  },
                  "variant": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "SegmentIO"
                        ]
                      },
                      "sharedSecret": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "sharedSecret"
                    ]
                  }
                },
                "required": [
                  "workspaceId",
                  "variant"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "variant": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "SegmentIO"
                          ]
                        },
                        "sharedSecret": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "sharedSecret"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "workspaceId",
                    "variant"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/settings/sms-providers/default": {
      "put": {
        "tags": [
          "Settings"
        ],
        "description": "Create or update default email provider settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "workspaceId": {
                    "type": "string"
                  },
                  "smsProviderId": {
                    "type": "string"
                  }
                },
                "required": [
                  "workspaceId",
                  "smsProviderId"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "workspaceId": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "Twilio"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "workspaceId"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "workspaceId": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "Test"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "workspaceId",
                        "type"
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/settings/email-providers/default": {
      "put": {
        "tags": [
          "Settings"
        ],
        "description": "Create or update email provider default",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "workspaceId": {
                    "type": "string"
                  },
                  "emailProviderId": {
                    "type": "string"
                  },
                  "fromAddress": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                },
                "required": [
                  "workspaceId",
                  "emailProviderId",
                  "fromAddress"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "An empty String",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An empty String",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/settings/write-keys": {
      "put": {
        "tags": [
          "Settings"
        ],
        "description": "Create a write key.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "writeKeyName": {
                    "type": "string"
                  },
                  "writeKeyValue": {
                    "type": "string"
                  },
                  "workspaceId": {
                    "type": "string"
                  }
                },
                "required": [
                  "writeKeyName",
                  "writeKeyValue",
                  "workspaceId"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "writeKeyName": {
                      "type": "string"
                    },
                    "writeKeyValue": {
                      "type": "string"
                    },
                    "secretId": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "writeKeyName",
                    "writeKeyValue",
                    "secretId",
                    "workspaceId"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Settings"
        ],
        "description": "Get write keys.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "workspaceId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "writeKeyName": {
                        "type": "string"
                      },
                      "writeKeyValue": {
                        "type": "string"
                      },
                      "secretId": {
                        "type": "string"
                      },
                      "workspaceId": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "writeKeyName",
                      "writeKeyValue",
                      "secretId",
                      "workspaceId"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Settings"
        ],
        "description": "Delete a write key.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "writeKeyName": {
                    "type": "string"
                  },
                  "workspaceId": {
                    "type": "string"
                  }
                },
                "required": [
                  "writeKeyName",
                  "workspaceId"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "An empty String",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An empty String",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/integrations/": {
      "put": {
        "tags": [
          "Integrations"
        ],
        "description": "Create or update an integration.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "definition": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Sync"
                        ]
                      },
                      "subscribedSegments": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "subscribedUserProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "type",
                      "subscribedSegments",
                      "subscribedUserProperties"
                    ]
                  },
                  "workspaceId": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "workspaceId",
                  "name"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "definition": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "Sync"
                          ]
                        },
                        "subscribedSegments": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "subscribedUserProperties": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "type",
                        "subscribedSegments",
                        "subscribedUserProperties"
                      ]
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "workspaceId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "definition",
                    "enabled",
                    "workspaceId"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/subscription-groups/": {
      "put": {
        "tags": [
          "Subscription Groups"
        ],
        "description": "Create or update a subscription group.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "workspaceId": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "channel": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "Email"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "MobilePush"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "Sms"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "Webhook"
                        ]
                      }
                    ]
                  },
                  "type": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "OptIn"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "OptOut"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "id",
                  "workspaceId",
                  "name",
                  "channel",
                  "type"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "channel": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "Email"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "MobilePush"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "Sms"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "Webhook"
                          ]
                        }
                      ]
                    },
                    "type": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "OptIn"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "OptOut"
                          ]
                        }
                      ]
                    },
                    "createdAt": {
                      "type": "number"
                    },
                    "updatedAt": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "id",
                    "workspaceId",
                    "name",
                    "channel",
                    "type",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "rowErrors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "row": {
                            "type": "number"
                          },
                          "error": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "row",
                          "error"
                        ]
                      }
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Subscription Groups"
        ],
        "description": "Delete a subscription group and its corresponding segment.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "An empty String",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An empty String",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/subscription-groups/upload-csv": {
      "post": {
        "tags": [
          "Subscription Groups"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "df-workspace-id",
            "required": true,
            "description": "Id of the workspace which will receive the segment payload. Defaults to the default workspace id, for single tenant systems"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "df-subscription-group-id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/user-properties/": {
      "put": {
        "tags": [
          "User Properties"
        ],
        "description": "Create or update a user property.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "workspaceId": {
                        "type": "string"
                      },
                      "definition": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Id"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "AnonymousId"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Group"
                                ]
                              },
                              "entry": {
                                "type": "string"
                              },
                              "nodes": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "AnyOf"
                                          ]
                                        },
                                        "children": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "type",
                                        "children"
                                      ]
                                    },
                                    {
                                      "anyOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "Trait"
                                              ]
                                            },
                                            "path": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "path"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "Performed"
                                              ]
                                            },
                                            "event": {
                                              "type": "string"
                                            },
                                            "path": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "type": "string"
                                                  },
                                                  "operator": {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "Equals"
                                                        ]
                                                      },
                                                      "value": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "value"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "path",
                                                  "operator"
                                                ]
                                              }
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "event",
                                            "path"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "type",
                              "entry",
                              "nodes"
                            ]
                          },
                          {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "Trait"
                                    ]
                                  },
                                  "path": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "path"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "Performed"
                                    ]
                                  },
                                  "event": {
                                    "type": "string"
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "properties": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "Equals"
                                              ]
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "value"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "path",
                                        "operator"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "type",
                                  "event",
                                  "path"
                                ]
                              }
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "PerformedMany"
                                ]
                              },
                              "or": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "event": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "event"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "type",
                              "or"
                            ]
                          }
                        ]
                      },
                      "exampleValue": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "number"
                      },
                      "lastRecomputed": {
                        "type": "number"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "definition": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Id"
                              ]
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "AnonymousId"
                              ]
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Group"
                              ]
                            },
                            "entry": {
                              "type": "string"
                            },
                            "nodes": {
                              "type": "array",
                              "items": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "AnyOf"
                                        ]
                                      },
                                      "children": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "type",
                                      "children"
                                    ]
                                  },
                                  {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "Trait"
                                            ]
                                          },
                                          "path": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "path"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "Performed"
                                            ]
                                          },
                                          "event": {
                                            "type": "string"
                                          },
                                          "path": {
                                            "type": "string"
                                          },
                                          "properties": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "path": {
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "Equals"
                                                      ]
                                                    },
                                                    "value": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "value"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "path",
                                                "operator"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "event",
                                          "path"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "required": [
                            "type",
                            "entry",
                            "nodes"
                          ]
                        },
                        {
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "Trait"
                                  ]
                                },
                                "path": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type",
                                "path"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "Performed"
                                  ]
                                },
                                "event": {
                                  "type": "string"
                                },
                                "path": {
                                  "type": "string"
                                },
                                "properties": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "path": {
                                        "type": "string"
                                      },
                                      "operator": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "Equals"
                                            ]
                                          },
                                          "value": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "value"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "path",
                                      "operator"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "type",
                                "event",
                                "path"
                              ]
                            }
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "PerformedMany"
                              ]
                            },
                            "or": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "event": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "event"
                                ]
                              }
                            }
                          },
                          "required": [
                            "type",
                            "or"
                          ]
                        }
                      ]
                    },
                    "exampleValue": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "number"
                    },
                    "lastRecomputed": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "id",
                    "workspaceId",
                    "name",
                    "definition",
                    "updatedAt"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "User Properties"
        ],
        "description": "Get all user properties.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "workspaceId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userProperties": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "workspaceId": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "definition": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "Id"
                                    ]
                                  }
                                },
                                "required": [
                                  "type"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "AnonymousId"
                                    ]
                                  }
                                },
                                "required": [
                                  "type"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "Group"
                                    ]
                                  },
                                  "entry": {
                                    "type": "string"
                                  },
                                  "nodes": {
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "AnyOf"
                                              ]
                                            },
                                            "children": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "type",
                                            "children"
                                          ]
                                        },
                                        {
                                          "anyOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Trait"
                                                  ]
                                                },
                                                "path": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "path"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Performed"
                                                  ]
                                                },
                                                "event": {
                                                  "type": "string"
                                                },
                                                "path": {
                                                  "type": "string"
                                                },
                                                "properties": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "path": {
                                                        "type": "string"
                                                      },
                                                      "operator": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string",
                                                            "enum": [
                                                              "Equals"
                                                            ]
                                                          },
                                                          "value": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "required": [
                                                          "type",
                                                          "value"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "path",
                                                      "operator"
                                                    ]
                                                  }
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "event",
                                                "path"
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "type",
                                  "entry",
                                  "nodes"
                                ]
                              },
                              {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "Trait"
                                        ]
                                      },
                                      "path": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "path"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "Performed"
                                        ]
                                      },
                                      "event": {
                                        "type": "string"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "properties": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "path": {
                                              "type": "string"
                                            },
                                            "operator": {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Equals"
                                                  ]
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "value"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "path",
                                            "operator"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "event",
                                      "path"
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "PerformedMany"
                                    ]
                                  },
                                  "or": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "event": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "event"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "type",
                                  "or"
                                ]
                              }
                            ]
                          },
                          "exampleValue": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "number"
                          },
                          "lastRecomputed": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "id",
                          "workspaceId",
                          "name",
                          "definition",
                          "updatedAt"
                        ]
                      }
                    }
                  },
                  "required": [
                    "userProperties"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User Properties"
        ],
        "description": "Delete a user property.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "workspaceId": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                },
                "required": [
                  "workspaceId",
                  "id"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "An empty String",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An empty String",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "An empty String",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An empty String",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/broadcasts/": {
      "put": {
        "tags": [
          "Broadcasts"
        ],
        "description": "Update a broadcast.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "workspaceId": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "workspaceId",
                  "id"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "segmentId": {
                      "type": "string"
                    },
                    "journeyId": {
                      "type": "string"
                    },
                    "messageTemplateId": {
                      "type": "string"
                    },
                    "status": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "NotStarted"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "InProgress"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "Triggered"
                          ]
                        }
                      ]
                    },
                    "createdAt": {
                      "type": "number"
                    },
                    "updatedAt": {
                      "type": "number"
                    },
                    "triggeredAt": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "id",
                    "workspaceId",
                    "name",
                    "status",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/broadcasts/trigger": {
      "put": {
        "tags": [
          "Broadcasts"
        ],
        "description": "Trigger a broadcast.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "workspaceId": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                },
                "required": [
                  "workspaceId",
                  "id"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "segmentId": {
                      "type": "string"
                    },
                    "journeyId": {
                      "type": "string"
                    },
                    "messageTemplateId": {
                      "type": "string"
                    },
                    "status": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "NotStarted"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "InProgress"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "Triggered"
                          ]
                        }
                      ]
                    },
                    "createdAt": {
                      "type": "number"
                    },
                    "updatedAt": {
                      "type": "number"
                    },
                    "triggeredAt": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "id",
                    "workspaceId",
                    "name",
                    "status",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/deliveries/": {
      "get": {
        "tags": [
          "Deliveries"
        ],
        "description": "Search through deliveries.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "workspaceId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "fromIdentifier",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "toIdentifier",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "journeyId",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "examples": {
              "1043": {
                "value": "1043"
              },
              "user-123": {
                "value": "user-123"
              },
              "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b": {
                "value": "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b"
              }
            },
            "in": "query",
            "name": "userId",
            "required": false,
            "description": "Unique identifier for the user. Should be the id of the user in your system. Only applicable to logged in users."
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "Email"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "MobilePush"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "Sms"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "Webhook"
                  ]
                }
              ]
            },
            "in": "query",
            "name": "channel",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "limit",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "cursor",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workspaceId": {
                      "type": "string"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string"
                              },
                              "variant": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "Sms"
                                    ]
                                  },
                                  "provider": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "Twilio"
                                            ]
                                          },
                                          "sid": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "sid"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "Test"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ]
                                      }
                                    ]
                                  },
                                  "to": {
                                    "type": "string"
                                  },
                                  "body": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "provider",
                                  "to",
                                  "body"
                                ]
                              },
                              "sentAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              },
                              "journeyId": {
                                "type": "string"
                              },
                              "userId": {
                                "description": "Unique identifier for the user. Should be the id of the user in your system. Only applicable to logged in users.",
                                "examples": [
                                  "1043",
                                  "user-123",
                                  "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b"
                                ],
                                "type": "string"
                              },
                              "originMessageId": {
                                "type": "string"
                              },
                              "templateId": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "status",
                              "variant",
                              "sentAt",
                              "updatedAt",
                              "journeyId",
                              "userId",
                              "originMessageId",
                              "templateId"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "status": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "DFInternalMessageSent"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "DFEmailDropped"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "DFEmailDelivered"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "DFEmailOpened"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "DFEmailClicked"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "DFEmailBounced"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "DFEmailMarkedSpam"
                                    ]
                                  }
                                ]
                              },
                              "variant": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "Email"
                                    ]
                                  },
                                  "provider": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "SendGrid"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "AmazonSes"
                                            ]
                                          },
                                          "messageId": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "PostMark"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "Resend"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "Smtp"
                                            ]
                                          },
                                          "messageId": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "messageId"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "Test"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ]
                                      }
                                    ]
                                  },
                                  "to": {
                                    "type": "string"
                                  },
                                  "headers": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "from": {
                                    "type": "string"
                                  },
                                  "body": {
                                    "type": "string"
                                  },
                                  "subject": {
                                    "type": "string"
                                  },
                                  "replyTo": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "provider",
                                  "to",
                                  "from",
                                  "body",
                                  "subject"
                                ]
                              },
                              "sentAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              },
                              "journeyId": {
                                "type": "string"
                              },
                              "userId": {
                                "description": "Unique identifier for the user. Should be the id of the user in your system. Only applicable to logged in users.",
                                "examples": [
                                  "1043",
                                  "user-123",
                                  "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b"
                                ],
                                "type": "string"
                              },
                              "originMessageId": {
                                "type": "string"
                              },
                              "templateId": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "status",
                              "variant",
                              "sentAt",
                              "updatedAt",
                              "journeyId",
                              "userId",
                              "originMessageId",
                              "templateId"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "status": {
                                "anyOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "DFInternalMessageSent"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "DFEmailDropped"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "DFEmailDelivered"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "DFEmailOpened"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "DFEmailClicked"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "DFEmailBounced"
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "DFEmailMarkedSpam"
                                    ]
                                  }
                                ]
                              },
                              "to": {
                                "type": "string"
                              },
                              "channel": {
                                "type": "string",
                                "enum": [
                                  "Email"
                                ]
                              },
                              "from": {
                                "type": "string"
                              },
                              "body": {
                                "type": "string"
                              },
                              "subject": {
                                "type": "string"
                              },
                              "replyTo": {
                                "type": "string"
                              },
                              "sentAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              },
                              "journeyId": {
                                "type": "string"
                              },
                              "userId": {
                                "description": "Unique identifier for the user. Should be the id of the user in your system. Only applicable to logged in users.",
                                "examples": [
                                  "1043",
                                  "user-123",
                                  "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b"
                                ],
                                "type": "string"
                              },
                              "originMessageId": {
                                "type": "string"
                              },
                              "templateId": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "status",
                              "to",
                              "channel",
                              "sentAt",
                              "updatedAt",
                              "journeyId",
                              "userId",
                              "originMessageId",
                              "templateId"
                            ]
                          }
                        ]
                      }
                    },
                    "cursor": {
                      "type": "string"
                    },
                    "previousCursor": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "workspaceId",
                    "items"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/admin-keys/": {
      "post": {
        "tags": [
          "API Key",
          "Admin"
        ],
        "description": "Create an admin API key.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "workspaceId": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "workspaceId",
                  "name"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workspaceId": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "number"
                    },
                    "apiKey": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "workspaceId",
                    "id",
                    "name",
                    "createdAt",
                    "apiKey"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "An empty String",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An empty String",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "API Key",
          "Admin"
        ],
        "description": "Delete an admin API key.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "workspaceId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "An empty String",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An empty String",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Get list of users",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cursor": {
                    "type": "string"
                  },
                  "segmentFilter": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "limit": {
                    "type": "number"
                  },
                  "direction": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "after"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "before"
                        ]
                      }
                    ]
                  },
                  "userIds": {
                    "type": "array",
                    "items": {
                      "description": "Unique identifier for the user. Should be the id of the user in your system. Only applicable to logged in users.",
                      "examples": [
                        "1043",
                        "user-123",
                        "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b"
                      ],
                      "type": "string"
                    }
                  },
                  "userPropertyFilter": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "values": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "id",
                        "values"
                      ]
                    }
                  },
                  "workspaceId": {
                    "type": "string"
                  }
                },
                "required": [
                  "workspaceId"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "properties": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {}
                              },
                              "required": [
                                "name",
                                "value"
                              ]
                            }
                          },
                          "segments": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name"
                              ]
                            }
                          }
                        },
                        "required": [
                          "id",
                          "properties",
                          "segments"
                        ]
                      }
                    },
                    "previousCursor": {
                      "type": "string"
                    },
                    "nextCursor": {
                      "type": "string"
                    },
                    "userCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "users",
                    "userCount"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "Delete events, and computed properties and segments for specific users.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "workspaceId": {
                    "type": "string"
                  },
                  "userIds": {
                    "type": "array",
                    "items": {
                      "description": "Unique identifier for the user. Should be the id of the user in your system. Only applicable to logged in users.",
                      "examples": [
                        "1043",
                        "user-123",
                        "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b"
                      ],
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "workspaceId",
                  "userIds"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "An empty String",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An empty String",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/webhooks/sendgrid": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Used to consume sendgrid webhook payloads.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "integer"
                    },
                    "event": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "processed"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "dropped"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "deferred"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "delivered"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "bounce"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "open"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "click"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "spamreport"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "unsubscribe"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "group_unsubscribe"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "group_resubscribe"
                          ]
                        }
                      ]
                    },
                    "sg_event_id": {
                      "type": "string"
                    },
                    "sg_message_id": {
                      "type": "string"
                    },
                    "ip": {
                      "type": "string"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "pool": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name"
                      ]
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "runId": {
                      "type": "string"
                    },
                    "messageId": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "templateId": {
                      "type": "string"
                    },
                    "nodeId": {
                      "type": "string"
                    },
                    "journeyId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "email",
                    "timestamp",
                    "event",
                    "sg_event_id",
                    "sg_message_id"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-twilio-email-event-webhook-signature",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-twilio-email-event-webhook-timestamp",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/webhooks/amazon-ses": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Used to consume amazonses notification events.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "Type": {
                        "type": "string",
                        "enum": [
                          "Notification"
                        ]
                      },
                      "Message": {
                        "type": "string"
                      },
                      "MessageId": {
                        "type": "string"
                      },
                      "Subject": {
                        "type": "string"
                      },
                      "TopicArn": {
                        "type": "string"
                      },
                      "Timestamp": {
                        "type": "string"
                      },
                      "SignatureVersion": {
                        "anyOf": [
                          {
                            "type": "string",
                            "enum": [
                              "1"
                            ]
                          },
                          {
                            "type": "string",
                            "enum": [
                              "2"
                            ]
                          }
                        ]
                      },
                      "Signature": {
                        "type": "string"
                      },
                      "SigningCertURL": {
                        "type": "string"
                      },
                      "UnsubscribeURL": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "Type",
                      "Message",
                      "MessageId",
                      "TopicArn",
                      "Timestamp",
                      "SignatureVersion",
                      "Signature",
                      "SigningCertURL",
                      "UnsubscribeURL"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "Type": {
                        "type": "string",
                        "enum": [
                          "SubscriptionConfirmation"
                        ]
                      },
                      "Token": {
                        "type": "string"
                      },
                      "TopicArn": {
                        "type": "string"
                      },
                      "SubscribeURL": {
                        "type": "string"
                      },
                      "Signature": {
                        "type": "string"
                      },
                      "SignatureVersion": {
                        "anyOf": [
                          {
                            "type": "string",
                            "enum": [
                              "1"
                            ]
                          },
                          {
                            "type": "string",
                            "enum": [
                              "2"
                            ]
                          }
                        ]
                      },
                      "SigningCertURL": {
                        "type": "string"
                      },
                      "Message": {
                        "type": "string"
                      },
                      "MessageId": {
                        "type": "string"
                      },
                      "Timestamp": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "Type",
                      "Token",
                      "TopicArn",
                      "SubscribeURL",
                      "Signature",
                      "SignatureVersion",
                      "SigningCertURL",
                      "Message",
                      "MessageId",
                      "Timestamp"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "Type": {
                        "type": "string",
                        "enum": [
                          "UnsubscribeConfirmation"
                        ]
                      },
                      "Token": {
                        "type": "string"
                      },
                      "TopicArn": {
                        "type": "string"
                      },
                      "SubscribeURL": {
                        "type": "string"
                      },
                      "Signature": {
                        "type": "string"
                      },
                      "SignatureVersion": {
                        "anyOf": [
                          {
                            "type": "string",
                            "enum": [
                              "1"
                            ]
                          },
                          {
                            "type": "string",
                            "enum": [
                              "2"
                            ]
                          }
                        ]
                      },
                      "SigningCertURL": {
                        "type": "string"
                      },
                      "Message": {
                        "type": "string"
                      },
                      "MessageId": {
                        "type": "string"
                      },
                      "Timestamp": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "Type",
                      "Token",
                      "TopicArn",
                      "SubscribeURL",
                      "Signature",
                      "SignatureVersion",
                      "SigningCertURL",
                      "Message",
                      "MessageId",
                      "Timestamp"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/webhooks/resend": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Used to consume resend webhook payloads.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "created_at": {
                    "type": "string"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "email_id": {
                        "type": "string"
                      },
                      "from": {
                        "type": "string"
                      },
                      "subject": {
                        "type": "string"
                      },
                      "to": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "tags": {
                        "type": "object",
                        "properties": {
                          "workspaceId": {
                            "type": "string"
                          },
                          "runId": {
                            "type": "string"
                          },
                          "messageId": {
                            "type": "string"
                          },
                          "userId": {
                            "type": "string"
                          },
                          "templateId": {
                            "type": "string"
                          },
                          "nodeId": {
                            "type": "string"
                          },
                          "journeyId": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "required": [
                      "created_at",
                      "email_id",
                      "from",
                      "subject",
                      "to",
                      "tags"
                    ]
                  },
                  "type": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "email.sent"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "email.delivered"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "email.delivery_delayed"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "email.complained"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "email.bounced"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "email.opened"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "email.clicked"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "created_at",
                  "data",
                  "type"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "svix-id",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "svix-timestamp",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "svix-signature",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/webhooks/postmark": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Used to consume postmark webhook payloads.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "MessageStream": {
                    "type": "string"
                  },
                  "Tag": {
                    "type": "string"
                  },
                  "MessageID": {
                    "type": "string"
                  },
                  "Metadata": {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  "RecordType": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "Delivery"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "SpamComplaint"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "Bounce"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "Open"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "Click"
                        ]
                      }
                    ]
                  },
                  "BouncedAt": {
                    "type": "string"
                  },
                  "DeliveredAt": {
                    "type": "string"
                  },
                  "ReceivedAt": {
                    "type": "string"
                  },
                  "workspaceId": {
                    "type": "string"
                  },
                  "runId": {
                    "type": "string"
                  },
                  "messageId": {
                    "type": "string"
                  },
                  "userId": {
                    "type": "string"
                  },
                  "templateId": {
                    "type": "string"
                  },
                  "nodeId": {
                    "type": "string"
                  },
                  "journeyId": {
                    "type": "string"
                  }
                },
                "required": [
                  "MessageStream",
                  "Tag",
                  "MessageID",
                  "Metadata",
                  "RecordType"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-postmark-secret",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/webhooks/twilio": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Used to consume Twilio webhook payloads.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SmsSid": {
                    "type": "string"
                  },
                  "MessagingServiceSid": {
                    "type": "string"
                  },
                  "SmsStatus": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "queued"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "sending"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "sent"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "failed"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "delivered"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "undelivered"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "receiving"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "received"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "accepted"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "scheduled"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "read"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "partially_delivered"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "canceled"
                        ]
                      }
                    ]
                  },
                  "Body": {
                    "type": "string"
                  },
                  "To": {
                    "type": "string"
                  },
                  "MessageSid": {
                    "type": "string"
                  },
                  "AccountSid": {
                    "type": "string"
                  },
                  "From": {
                    "type": "string"
                  },
                  "ApiVersion": {
                    "type": "string"
                  }
                },
                "required": [
                  "SmsSid",
                  "MessagingServiceSid",
                  "SmsStatus",
                  "To",
                  "MessageSid",
                  "AccountSid",
                  "From",
                  "ApiVersion"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "workspaceId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "userId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "subscriptionGroupId",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-twilio-signature",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/webhooks/segment": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Used to consume segment.io webhook payloads. Must be exposed publicly to the internet.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "properties": {
                  "messageId": {
                    "type": "string"
                  },
                  "timestamp": {
                    "type": "string"
                  }
                },
                "required": [
                  "messageId",
                  "timestamp"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-signature",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "df-workspace-id",
            "required": false,
            "description": "Id of the workspace which will receive the segment payload. Defaults to the default workspace id, for single tenant systems"
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/public/subscription-management/user-subscriptions": {
      "put": {
        "description": "Allows users to manage their subscriptions.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "workspaceId": {
                        "description": "Workspace Id.",
                        "type": "string"
                      },
                      "hash": {
                        "description": "Subscription change hash, used to authenticate subscription changes.",
                        "type": "string"
                      },
                      "identifier": {
                        "description": "Identifier value for channel.",
                        "examples": [
                          "user@email.com"
                        ],
                        "type": "string"
                      },
                      "identifierKey": {
                        "description": "Identifier key for channel.",
                        "examples": [
                          "email"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "workspaceId",
                      "hash",
                      "identifier",
                      "identifierKey"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "changes": {
                        "description": "Subscription changes.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "boolean"
                        }
                      }
                    },
                    "required": [
                      "changes"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "An empty String",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An empty String",
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/public/apps/identify": {
      "post": {
        "tags": [
          "Public Apps"
        ],
        "description": "The Identify call lets you tie a user to their actions and record traits about them. It includes a unique User ID and any optional traits you know about the user, like their email, name, and more.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "files": {
                        "type": "array",
                        "items": {
                          "description": "File associated with user event.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Base64Encoded"
                              ]
                            },
                            "name": {
                              "type": "string"
                            },
                            "mimeType": {
                              "type": "string"
                            },
                            "data": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "name",
                            "mimeType",
                            "data"
                          ]
                        }
                      },
                      "messageId": {
                        "description": "Unique identifier for the message, used as an idempotency key for safe retries. Can provide a UUID.",
                        "examples": [
                          "23d04926-78e5-4ebc-853f-f26c84ff629e"
                        ],
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "ISO 8601 formatted timestamp of when the event occurred. If not provided, the current server time will be used.",
                        "examples": [
                          "2024-04-22T07:00:00.000Z"
                        ],
                        "type": "string"
                      },
                      "context": {
                        "description": "Provides metadata about the user submitting the event and the context in which the event occurred.",
                        "examples": [
                          {
                            "ip": "192.0.2.1"
                          }
                        ],
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "traits": {
                        "description": "Free-form dictionary of traits of the user, like email or name. Can contain arbitrary JSON values.",
                        "examples": [
                          {
                            "name": "Michael Scott",
                            "items": [
                              {
                                "id": 1,
                                "name": "Paper"
                              },
                              {
                                "id": 2,
                                "name": "Stapler"
                              }
                            ]
                          }
                        ],
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "userId": {
                        "description": "Unique identifier for the user. Should be the id of the user in your system. Only applicable to logged in users.",
                        "examples": [
                          "1043",
                          "user-123",
                          "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "messageId",
                      "userId"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "files": {
                        "type": "array",
                        "items": {
                          "description": "File associated with user event.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Base64Encoded"
                              ]
                            },
                            "name": {
                              "type": "string"
                            },
                            "mimeType": {
                              "type": "string"
                            },
                            "data": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "name",
                            "mimeType",
                            "data"
                          ]
                        }
                      },
                      "messageId": {
                        "description": "Unique identifier for the message, used as an idempotency key for safe retries. Can provide a UUID.",
                        "examples": [
                          "23d04926-78e5-4ebc-853f-f26c84ff629e"
                        ],
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "ISO 8601 formatted timestamp of when the event occurred. If not provided, the current server time will be used.",
                        "examples": [
                          "2024-04-22T07:00:00.000Z"
                        ],
                        "type": "string"
                      },
                      "context": {
                        "description": "Provides metadata about the user submitting the event and the context in which the event occurred.",
                        "examples": [
                          {
                            "ip": "192.0.2.1"
                          }
                        ],
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "traits": {
                        "description": "Free-form dictionary of traits of the user, like email or name. Can contain arbitrary JSON values.",
                        "examples": [
                          {
                            "name": "Michael Scott",
                            "items": [
                              {
                                "id": 1,
                                "name": "Paper"
                              },
                              {
                                "id": 2,
                                "name": "Stapler"
                              }
                            ]
                          }
                        ],
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "anonymousId": {
                        "description": "Identifier for a logged out user. It can be any pseudo-unique identifier, for example a session Id or a UUID.",
                        "examples": [
                          "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b",
                          "session-123"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "messageId",
                      "anonymousId"
                    ]
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "example": "Basic YzQ2MDllYjMtYTE2OC00MGI5LWI1ZWMtYTdiYTFkYzY2NWYwOjI5NGYwYjkyOTI1YWZhNzM=",
            "in": "header",
            "name": "authorization",
            "required": true,
            "description": "Authorization header for the request, in the format `Bearer <token>`. Find your token at https://dittofeed.com/dashboard/settings#write-key."
          }
        ],
        "security": [
          {
            "publicWriteKey": []
          }
        ],
        "responses": {
          "204": {
            "description": "An empty String",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An empty String",
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/public/apps/track": {
      "post": {
        "tags": [
          "Public Apps"
        ],
        "description": "The Track call is how you record any actions your users perform, along with any properties that describe the action.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "files": {
                        "type": "array",
                        "items": {
                          "description": "File associated with user event.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Base64Encoded"
                              ]
                            },
                            "name": {
                              "type": "string"
                            },
                            "mimeType": {
                              "type": "string"
                            },
                            "data": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "name",
                            "mimeType",
                            "data"
                          ]
                        }
                      },
                      "messageId": {
                        "description": "Unique identifier for the message, used as an idempotency key for safe retries. Can provide a UUID.",
                        "examples": [
                          "23d04926-78e5-4ebc-853f-f26c84ff629e"
                        ],
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "ISO 8601 formatted timestamp of when the event occurred. If not provided, the current server time will be used.",
                        "examples": [
                          "2024-04-22T07:00:00.000Z"
                        ],
                        "type": "string"
                      },
                      "context": {
                        "description": "Provides metadata about the user submitting the event and the context in which the event occurred.",
                        "examples": [
                          {
                            "ip": "192.0.2.1"
                          }
                        ],
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "event": {
                        "description": "Name of the action that a user has performed.",
                        "examples": [
                          "COURSE_CLICKED"
                        ],
                        "type": "string"
                      },
                      "properties": {
                        "description": "Free-form dictionary of properties of the event, like revenue or product name. Can contain arbitrary JSON values.",
                        "examples": [
                          {
                            "title": "Intro to customer engagement"
                          }
                        ],
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "userId": {
                        "description": "Unique identifier for the user. Should be the id of the user in your system. Only applicable to logged in users.",
                        "examples": [
                          "1043",
                          "user-123",
                          "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "messageId",
                      "event",
                      "userId"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "files": {
                        "type": "array",
                        "items": {
                          "description": "File associated with user event.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Base64Encoded"
                              ]
                            },
                            "name": {
                              "type": "string"
                            },
                            "mimeType": {
                              "type": "string"
                            },
                            "data": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "name",
                            "mimeType",
                            "data"
                          ]
                        }
                      },
                      "messageId": {
                        "description": "Unique identifier for the message, used as an idempotency key for safe retries. Can provide a UUID.",
                        "examples": [
                          "23d04926-78e5-4ebc-853f-f26c84ff629e"
                        ],
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "ISO 8601 formatted timestamp of when the event occurred. If not provided, the current server time will be used.",
                        "examples": [
                          "2024-04-22T07:00:00.000Z"
                        ],
                        "type": "string"
                      },
                      "context": {
                        "description": "Provides metadata about the user submitting the event and the context in which the event occurred.",
                        "examples": [
                          {
                            "ip": "192.0.2.1"
                          }
                        ],
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "event": {
                        "description": "Name of the action that a user has performed.",
                        "examples": [
                          "COURSE_CLICKED"
                        ],
                        "type": "string"
                      },
                      "properties": {
                        "description": "Free-form dictionary of properties of the event, like revenue or product name. Can contain arbitrary JSON values.",
                        "examples": [
                          {
                            "title": "Intro to customer engagement"
                          }
                        ],
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "anonymousId": {
                        "description": "Identifier for a logged out user. It can be any pseudo-unique identifier, for example a session Id or a UUID.",
                        "examples": [
                          "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b",
                          "session-123"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "messageId",
                      "event",
                      "anonymousId"
                    ]
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "example": "Basic YzQ2MDllYjMtYTE2OC00MGI5LWI1ZWMtYTdiYTFkYzY2NWYwOjI5NGYwYjkyOTI1YWZhNzM=",
            "in": "header",
            "name": "authorization",
            "required": true,
            "description": "Authorization header for the request, in the format `Bearer <token>`. Find your token at https://dittofeed.com/dashboard/settings#write-key."
          }
        ],
        "security": [
          {
            "publicWriteKey": []
          }
        ],
        "responses": {
          "204": {
            "description": "An empty String",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An empty String",
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/public/apps/page": {
      "post": {
        "tags": [
          "Public Apps"
        ],
        "description": "The page call lets you record whenever a user sees a page of your website, along with any optional properties about the page.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "files": {
                        "type": "array",
                        "items": {
                          "description": "File associated with user event.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Base64Encoded"
                              ]
                            },
                            "name": {
                              "type": "string"
                            },
                            "mimeType": {
                              "type": "string"
                            },
                            "data": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "name",
                            "mimeType",
                            "data"
                          ]
                        }
                      },
                      "messageId": {
                        "description": "Unique identifier for the message, used as an idempotency key for safe retries. Can provide a UUID.",
                        "examples": [
                          "23d04926-78e5-4ebc-853f-f26c84ff629e"
                        ],
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "ISO 8601 formatted timestamp of when the event occurred. If not provided, the current server time will be used.",
                        "examples": [
                          "2024-04-22T07:00:00.000Z"
                        ],
                        "type": "string"
                      },
                      "context": {
                        "description": "Provides metadata about the user submitting the event and the context in which the event occurred.",
                        "examples": [
                          {
                            "ip": "192.0.2.1"
                          }
                        ],
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "name": {
                        "description": "Name of the page visited by the user.",
                        "examples": [
                          "Home"
                        ],
                        "type": "string"
                      },
                      "properties": {
                        "description": "Free-form dictionary of properties of the page, like url and referrer. Can contain arbitrary JSON values.",
                        "examples": [
                          {
                            "title": "My Site",
                            "url": "http://www.site.com"
                          }
                        ],
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "userId": {
                        "description": "Unique identifier for the user. Should be the id of the user in your system. Only applicable to logged in users.",
                        "examples": [
                          "1043",
                          "user-123",
                          "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "messageId",
                      "userId"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "files": {
                        "type": "array",
                        "items": {
                          "description": "File associated with user event.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Base64Encoded"
                              ]
                            },
                            "name": {
                              "type": "string"
                            },
                            "mimeType": {
                              "type": "string"
                            },
                            "data": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "name",
                            "mimeType",
                            "data"
                          ]
                        }
                      },
                      "messageId": {
                        "description": "Unique identifier for the message, used as an idempotency key for safe retries. Can provide a UUID.",
                        "examples": [
                          "23d04926-78e5-4ebc-853f-f26c84ff629e"
                        ],
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "ISO 8601 formatted timestamp of when the event occurred. If not provided, the current server time will be used.",
                        "examples": [
                          "2024-04-22T07:00:00.000Z"
                        ],
                        "type": "string"
                      },
                      "context": {
                        "description": "Provides metadata about the user submitting the event and the context in which the event occurred.",
                        "examples": [
                          {
                            "ip": "192.0.2.1"
                          }
                        ],
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "name": {
                        "description": "Name of the page visited by the user.",
                        "examples": [
                          "Home"
                        ],
                        "type": "string"
                      },
                      "properties": {
                        "description": "Free-form dictionary of properties of the page, like url and referrer. Can contain arbitrary JSON values.",
                        "examples": [
                          {
                            "title": "My Site",
                            "url": "http://www.site.com"
                          }
                        ],
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "anonymousId": {
                        "description": "Identifier for a logged out user. It can be any pseudo-unique identifier, for example a session Id or a UUID.",
                        "examples": [
                          "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b",
                          "session-123"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "messageId",
                      "anonymousId"
                    ]
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "example": "Basic YzQ2MDllYjMtYTE2OC00MGI5LWI1ZWMtYTdiYTFkYzY2NWYwOjI5NGYwYjkyOTI1YWZhNzM=",
            "in": "header",
            "name": "authorization",
            "required": true,
            "description": "Authorization header for the request, in the format `Bearer <token>`. Find your token at https://dittofeed.com/dashboard/settings#write-key."
          }
        ],
        "security": [
          {
            "publicWriteKey": []
          }
        ],
        "responses": {
          "204": {
            "description": "An empty String",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An empty String",
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/public/apps/screen": {
      "post": {
        "tags": [
          "Public Apps"
        ],
        "description": "The screen call lets you record whenever a user sees a screen, the mobile equivalent of page, in your mobile app, along with any properties about the screen",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "files": {
                        "type": "array",
                        "items": {
                          "description": "File associated with user event.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Base64Encoded"
                              ]
                            },
                            "name": {
                              "type": "string"
                            },
                            "mimeType": {
                              "type": "string"
                            },
                            "data": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "name",
                            "mimeType",
                            "data"
                          ]
                        }
                      },
                      "messageId": {
                        "description": "Unique identifier for the message, used as an idempotency key for safe retries. Can provide a UUID.",
                        "examples": [
                          "23d04926-78e5-4ebc-853f-f26c84ff629e"
                        ],
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "ISO 8601 formatted timestamp of when the event occurred. If not provided, the current server time will be used.",
                        "examples": [
                          "2024-04-22T07:00:00.000Z"
                        ],
                        "type": "string"
                      },
                      "context": {
                        "description": "Provides metadata about the user submitting the event and the context in which the event occurred.",
                        "examples": [
                          {
                            "ip": "192.0.2.1"
                          }
                        ],
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "name": {
                        "description": "Name of the screen visited by the user.",
                        "examples": [
                          "Home"
                        ],
                        "type": "string"
                      },
                      "properties": {
                        "description": "Free-form dictionary of properties of the screen, like title.",
                        "examples": [
                          {
                            "title": "My Screen"
                          }
                        ],
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "userId": {
                        "description": "Unique identifier for the user. Should be the id of the user in your system. Only applicable to logged in users.",
                        "examples": [
                          "1043",
                          "user-123",
                          "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "messageId",
                      "userId"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "files": {
                        "type": "array",
                        "items": {
                          "description": "File associated with user event.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Base64Encoded"
                              ]
                            },
                            "name": {
                              "type": "string"
                            },
                            "mimeType": {
                              "type": "string"
                            },
                            "data": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "name",
                            "mimeType",
                            "data"
                          ]
                        }
                      },
                      "messageId": {
                        "description": "Unique identifier for the message, used as an idempotency key for safe retries. Can provide a UUID.",
                        "examples": [
                          "23d04926-78e5-4ebc-853f-f26c84ff629e"
                        ],
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "ISO 8601 formatted timestamp of when the event occurred. If not provided, the current server time will be used.",
                        "examples": [
                          "2024-04-22T07:00:00.000Z"
                        ],
                        "type": "string"
                      },
                      "context": {
                        "description": "Provides metadata about the user submitting the event and the context in which the event occurred.",
                        "examples": [
                          {
                            "ip": "192.0.2.1"
                          }
                        ],
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "name": {
                        "description": "Name of the screen visited by the user.",
                        "examples": [
                          "Home"
                        ],
                        "type": "string"
                      },
                      "properties": {
                        "description": "Free-form dictionary of properties of the screen, like title.",
                        "examples": [
                          {
                            "title": "My Screen"
                          }
                        ],
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "anonymousId": {
                        "description": "Identifier for a logged out user. It can be any pseudo-unique identifier, for example a session Id or a UUID.",
                        "examples": [
                          "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b",
                          "session-123"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "messageId",
                      "anonymousId"
                    ]
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "example": "Basic YzQ2MDllYjMtYTE2OC00MGI5LWI1ZWMtYTdiYTFkYzY2NWYwOjI5NGYwYjkyOTI1YWZhNzM=",
            "in": "header",
            "name": "authorization",
            "required": true,
            "description": "Authorization header for the request, in the format `Bearer <token>`. Find your token at https://dittofeed.com/dashboard/settings#write-key."
          }
        ],
        "security": [
          {
            "publicWriteKey": []
          }
        ],
        "responses": {
          "204": {
            "description": "An empty String",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An empty String",
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/public/apps/group": {
      "post": {
        "tags": [
          "Public Apps"
        ],
        "security": [
          {
            "publicWriteKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/public/apps/alias": {
      "post": {
        "tags": [
          "Public Apps"
        ],
        "security": [
          {
            "publicWriteKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/public/apps/batch": {
      "post": {
        "tags": [
          "Public Apps"
        ],
        "description": "The batch method lets you send a series of identify, group, track, page and screen requests in a single batch, saving on outbound requests.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "batch": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "files": {
                                  "type": "array",
                                  "items": {
                                    "description": "File associated with user event.",
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "Base64Encoded"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "mimeType": {
                                        "type": "string"
                                      },
                                      "data": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "name",
                                      "mimeType",
                                      "data"
                                    ]
                                  }
                                },
                                "messageId": {
                                  "description": "Unique identifier for the message, used as an idempotency key for safe retries. Can provide a UUID.",
                                  "examples": [
                                    "23d04926-78e5-4ebc-853f-f26c84ff629e"
                                  ],
                                  "type": "string"
                                },
                                "timestamp": {
                                  "description": "ISO 8601 formatted timestamp of when the event occurred. If not provided, the current server time will be used.",
                                  "examples": [
                                    "2024-04-22T07:00:00.000Z"
                                  ],
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "identify"
                                  ]
                                },
                                "traits": {
                                  "description": "Free-form dictionary of traits of the user, like email or name. Can contain arbitrary JSON values.",
                                  "examples": [
                                    {
                                      "name": "Michael Scott",
                                      "items": [
                                        {
                                          "id": 1,
                                          "name": "Paper"
                                        },
                                        {
                                          "id": 2,
                                          "name": "Stapler"
                                        }
                                      ]
                                    }
                                  ],
                                  "type": "object",
                                  "additionalProperties": {}
                                },
                                "userId": {
                                  "description": "Unique identifier for the user. Should be the id of the user in your system. Only applicable to logged in users.",
                                  "examples": [
                                    "1043",
                                    "user-123",
                                    "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "messageId",
                                "type",
                                "userId"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "files": {
                                  "type": "array",
                                  "items": {
                                    "description": "File associated with user event.",
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "Base64Encoded"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "mimeType": {
                                        "type": "string"
                                      },
                                      "data": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "name",
                                      "mimeType",
                                      "data"
                                    ]
                                  }
                                },
                                "messageId": {
                                  "description": "Unique identifier for the message, used as an idempotency key for safe retries. Can provide a UUID.",
                                  "examples": [
                                    "23d04926-78e5-4ebc-853f-f26c84ff629e"
                                  ],
                                  "type": "string"
                                },
                                "timestamp": {
                                  "description": "ISO 8601 formatted timestamp of when the event occurred. If not provided, the current server time will be used.",
                                  "examples": [
                                    "2024-04-22T07:00:00.000Z"
                                  ],
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "identify"
                                  ]
                                },
                                "traits": {
                                  "description": "Free-form dictionary of traits of the user, like email or name. Can contain arbitrary JSON values.",
                                  "examples": [
                                    {
                                      "name": "Michael Scott",
                                      "items": [
                                        {
                                          "id": 1,
                                          "name": "Paper"
                                        },
                                        {
                                          "id": 2,
                                          "name": "Stapler"
                                        }
                                      ]
                                    }
                                  ],
                                  "type": "object",
                                  "additionalProperties": {}
                                },
                                "anonymousId": {
                                  "description": "Identifier for a logged out user. It can be any pseudo-unique identifier, for example a session Id or a UUID.",
                                  "examples": [
                                    "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b",
                                    "session-123"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "messageId",
                                "type",
                                "anonymousId"
                              ]
                            }
                          ]
                        },
                        {
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "files": {
                                  "type": "array",
                                  "items": {
                                    "description": "File associated with user event.",
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "Base64Encoded"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "mimeType": {
                                        "type": "string"
                                      },
                                      "data": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "name",
                                      "mimeType",
                                      "data"
                                    ]
                                  }
                                },
                                "messageId": {
                                  "description": "Unique identifier for the message, used as an idempotency key for safe retries. Can provide a UUID.",
                                  "examples": [
                                    "23d04926-78e5-4ebc-853f-f26c84ff629e"
                                  ],
                                  "type": "string"
                                },
                                "timestamp": {
                                  "description": "ISO 8601 formatted timestamp of when the event occurred. If not provided, the current server time will be used.",
                                  "examples": [
                                    "2024-04-22T07:00:00.000Z"
                                  ],
                                  "type": "string"
                                },
                                "context": {
                                  "description": "Provides metadata about the user submitting the event and the context in which the event occurred.",
                                  "examples": [
                                    {
                                      "ip": "192.0.2.1"
                                    }
                                  ],
                                  "type": "object",
                                  "additionalProperties": {}
                                },
                                "event": {
                                  "description": "Name of the action that a user has performed.",
                                  "examples": [
                                    "COURSE_CLICKED"
                                  ],
                                  "type": "string"
                                },
                                "properties": {
                                  "description": "Free-form dictionary of properties of the event, like revenue or product name. Can contain arbitrary JSON values.",
                                  "examples": [
                                    {
                                      "title": "Intro to customer engagement"
                                    }
                                  ],
                                  "type": "object",
                                  "additionalProperties": {}
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "track"
                                  ]
                                },
                                "userId": {
                                  "description": "Unique identifier for the user. Should be the id of the user in your system. Only applicable to logged in users.",
                                  "examples": [
                                    "1043",
                                    "user-123",
                                    "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "messageId",
                                "event",
                                "type",
                                "userId"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "files": {
                                  "type": "array",
                                  "items": {
                                    "description": "File associated with user event.",
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "Base64Encoded"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "mimeType": {
                                        "type": "string"
                                      },
                                      "data": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "name",
                                      "mimeType",
                                      "data"
                                    ]
                                  }
                                },
                                "messageId": {
                                  "description": "Unique identifier for the message, used as an idempotency key for safe retries. Can provide a UUID.",
                                  "examples": [
                                    "23d04926-78e5-4ebc-853f-f26c84ff629e"
                                  ],
                                  "type": "string"
                                },
                                "timestamp": {
                                  "description": "ISO 8601 formatted timestamp of when the event occurred. If not provided, the current server time will be used.",
                                  "examples": [
                                    "2024-04-22T07:00:00.000Z"
                                  ],
                                  "type": "string"
                                },
                                "context": {
                                  "description": "Provides metadata about the user submitting the event and the context in which the event occurred.",
                                  "examples": [
                                    {
                                      "ip": "192.0.2.1"
                                    }
                                  ],
                                  "type": "object",
                                  "additionalProperties": {}
                                },
                                "event": {
                                  "description": "Name of the action that a user has performed.",
                                  "examples": [
                                    "COURSE_CLICKED"
                                  ],
                                  "type": "string"
                                },
                                "properties": {
                                  "description": "Free-form dictionary of properties of the event, like revenue or product name. Can contain arbitrary JSON values.",
                                  "examples": [
                                    {
                                      "title": "Intro to customer engagement"
                                    }
                                  ],
                                  "type": "object",
                                  "additionalProperties": {}
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "track"
                                  ]
                                },
                                "anonymousId": {
                                  "description": "Identifier for a logged out user. It can be any pseudo-unique identifier, for example a session Id or a UUID.",
                                  "examples": [
                                    "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b",
                                    "session-123"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "messageId",
                                "event",
                                "type",
                                "anonymousId"
                              ]
                            }
                          ]
                        },
                        {
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "files": {
                                  "type": "array",
                                  "items": {
                                    "description": "File associated with user event.",
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "Base64Encoded"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "mimeType": {
                                        "type": "string"
                                      },
                                      "data": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "name",
                                      "mimeType",
                                      "data"
                                    ]
                                  }
                                },
                                "messageId": {
                                  "description": "Unique identifier for the message, used as an idempotency key for safe retries. Can provide a UUID.",
                                  "examples": [
                                    "23d04926-78e5-4ebc-853f-f26c84ff629e"
                                  ],
                                  "type": "string"
                                },
                                "timestamp": {
                                  "description": "ISO 8601 formatted timestamp of when the event occurred. If not provided, the current server time will be used.",
                                  "examples": [
                                    "2024-04-22T07:00:00.000Z"
                                  ],
                                  "type": "string"
                                },
                                "context": {
                                  "description": "Provides metadata about the user submitting the event and the context in which the event occurred.",
                                  "examples": [
                                    {
                                      "ip": "192.0.2.1"
                                    }
                                  ],
                                  "type": "object",
                                  "additionalProperties": {}
                                },
                                "name": {
                                  "description": "Name of the page visited by the user.",
                                  "examples": [
                                    "Home"
                                  ],
                                  "type": "string"
                                },
                                "properties": {
                                  "description": "Free-form dictionary of properties of the page, like url and referrer. Can contain arbitrary JSON values.",
                                  "examples": [
                                    {
                                      "title": "My Site",
                                      "url": "http://www.site.com"
                                    }
                                  ],
                                  "type": "object",
                                  "additionalProperties": {}
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "page"
                                  ]
                                },
                                "userId": {
                                  "description": "Unique identifier for the user. Should be the id of the user in your system. Only applicable to logged in users.",
                                  "examples": [
                                    "1043",
                                    "user-123",
                                    "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "messageId",
                                "type",
                                "userId"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "files": {
                                  "type": "array",
                                  "items": {
                                    "description": "File associated with user event.",
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "Base64Encoded"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "mimeType": {
                                        "type": "string"
                                      },
                                      "data": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "name",
                                      "mimeType",
                                      "data"
                                    ]
                                  }
                                },
                                "messageId": {
                                  "description": "Unique identifier for the message, used as an idempotency key for safe retries. Can provide a UUID.",
                                  "examples": [
                                    "23d04926-78e5-4ebc-853f-f26c84ff629e"
                                  ],
                                  "type": "string"
                                },
                                "timestamp": {
                                  "description": "ISO 8601 formatted timestamp of when the event occurred. If not provided, the current server time will be used.",
                                  "examples": [
                                    "2024-04-22T07:00:00.000Z"
                                  ],
                                  "type": "string"
                                },
                                "context": {
                                  "description": "Provides metadata about the user submitting the event and the context in which the event occurred.",
                                  "examples": [
                                    {
                                      "ip": "192.0.2.1"
                                    }
                                  ],
                                  "type": "object",
                                  "additionalProperties": {}
                                },
                                "name": {
                                  "description": "Name of the page visited by the user.",
                                  "examples": [
                                    "Home"
                                  ],
                                  "type": "string"
                                },
                                "properties": {
                                  "description": "Free-form dictionary of properties of the page, like url and referrer. Can contain arbitrary JSON values.",
                                  "examples": [
                                    {
                                      "title": "My Site",
                                      "url": "http://www.site.com"
                                    }
                                  ],
                                  "type": "object",
                                  "additionalProperties": {}
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "page"
                                  ]
                                },
                                "anonymousId": {
                                  "description": "Identifier for a logged out user. It can be any pseudo-unique identifier, for example a session Id or a UUID.",
                                  "examples": [
                                    "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b",
                                    "session-123"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "messageId",
                                "type",
                                "anonymousId"
                              ]
                            }
                          ]
                        },
                        {
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "files": {
                                  "type": "array",
                                  "items": {
                                    "description": "File associated with user event.",
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "Base64Encoded"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "mimeType": {
                                        "type": "string"
                                      },
                                      "data": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "name",
                                      "mimeType",
                                      "data"
                                    ]
                                  }
                                },
                                "messageId": {
                                  "description": "Unique identifier for the message, used as an idempotency key for safe retries. Can provide a UUID.",
                                  "examples": [
                                    "23d04926-78e5-4ebc-853f-f26c84ff629e"
                                  ],
                                  "type": "string"
                                },
                                "timestamp": {
                                  "description": "ISO 8601 formatted timestamp of when the event occurred. If not provided, the current server time will be used.",
                                  "examples": [
                                    "2024-04-22T07:00:00.000Z"
                                  ],
                                  "type": "string"
                                },
                                "context": {
                                  "description": "Provides metadata about the user submitting the event and the context in which the event occurred.",
                                  "examples": [
                                    {
                                      "ip": "192.0.2.1"
                                    }
                                  ],
                                  "type": "object",
                                  "additionalProperties": {}
                                },
                                "name": {
                                  "description": "Name of the screen visited by the user.",
                                  "examples": [
                                    "Home"
                                  ],
                                  "type": "string"
                                },
                                "properties": {
                                  "description": "Free-form dictionary of properties of the screen, like title.",
                                  "examples": [
                                    {
                                      "title": "My Screen"
                                    }
                                  ],
                                  "type": "object",
                                  "additionalProperties": {}
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "screen"
                                  ]
                                },
                                "userId": {
                                  "description": "Unique identifier for the user. Should be the id of the user in your system. Only applicable to logged in users.",
                                  "examples": [
                                    "1043",
                                    "user-123",
                                    "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "messageId",
                                "type",
                                "userId"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "files": {
                                  "type": "array",
                                  "items": {
                                    "description": "File associated with user event.",
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "Base64Encoded"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "mimeType": {
                                        "type": "string"
                                      },
                                      "data": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "name",
                                      "mimeType",
                                      "data"
                                    ]
                                  }
                                },
                                "messageId": {
                                  "description": "Unique identifier for the message, used as an idempotency key for safe retries. Can provide a UUID.",
                                  "examples": [
                                    "23d04926-78e5-4ebc-853f-f26c84ff629e"
                                  ],
                                  "type": "string"
                                },
                                "timestamp": {
                                  "description": "ISO 8601 formatted timestamp of when the event occurred. If not provided, the current server time will be used.",
                                  "examples": [
                                    "2024-04-22T07:00:00.000Z"
                                  ],
                                  "type": "string"
                                },
                                "context": {
                                  "description": "Provides metadata about the user submitting the event and the context in which the event occurred.",
                                  "examples": [
                                    {
                                      "ip": "192.0.2.1"
                                    }
                                  ],
                                  "type": "object",
                                  "additionalProperties": {}
                                },
                                "name": {
                                  "description": "Name of the screen visited by the user.",
                                  "examples": [
                                    "Home"
                                  ],
                                  "type": "string"
                                },
                                "properties": {
                                  "description": "Free-form dictionary of properties of the screen, like title.",
                                  "examples": [
                                    {
                                      "title": "My Screen"
                                    }
                                  ],
                                  "type": "object",
                                  "additionalProperties": {}
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "screen"
                                  ]
                                },
                                "anonymousId": {
                                  "description": "Identifier for a logged out user. It can be any pseudo-unique identifier, for example a session Id or a UUID.",
                                  "examples": [
                                    "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b",
                                    "session-123"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "messageId",
                                "type",
                                "anonymousId"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "context": {
                    "description": "Provides metadata about the user submitting the event and the context in which the event occurred.",
                    "examples": [
                      {
                        "ip": "192.0.2.1"
                      }
                    ],
                    "type": "object",
                    "additionalProperties": {}
                  }
                },
                "required": [
                  "batch"
                ]
              },
              "example": {
                "batch": [
                  {
                    "type": "track",
                    "event": "Signed Up",
                    "userId": "1043",
                    "properties": {
                      "plan": "Enterprise"
                    },
                    "messageId": "1ff51c9c-4929-45de-8914-3bb878be8c4a"
                  },
                  {
                    "type": "identify",
                    "userId": "532",
                    "traits": {
                      "email": "john@email.com"
                    },
                    "messageId": "6f5f436d-8534-4070-8023-d18f8b78ed39"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "example": "Basic YzQ2MDllYjMtYTE2OC00MGI5LWI1ZWMtYTdiYTFkYzY2NWYwOjI5NGYwYjkyOTI1YWZhNzM=",
            "in": "header",
            "name": "authorization",
            "required": true,
            "description": "Authorization header for the request, in the format `Bearer <token>`. Find your token at https://dittofeed.com/dashboard/settings#write-key."
          }
        ],
        "security": [
          {
            "publicWriteKey": []
          }
        ],
        "responses": {
          "204": {
            "description": "An empty String",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An empty String",
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/public/webhooks/sendgrid": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Used to consume sendgrid webhook payloads.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "integer"
                    },
                    "event": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "processed"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "dropped"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "deferred"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "delivered"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "bounce"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "open"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "click"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "spamreport"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "unsubscribe"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "group_unsubscribe"
                          ]
                        },
                        {
                          "type": "string",
                          "enum": [
                            "group_resubscribe"
                          ]
                        }
                      ]
                    },
                    "sg_event_id": {
                      "type": "string"
                    },
                    "sg_message_id": {
                      "type": "string"
                    },
                    "ip": {
                      "type": "string"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "pool": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name"
                      ]
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "runId": {
                      "type": "string"
                    },
                    "messageId": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "templateId": {
                      "type": "string"
                    },
                    "nodeId": {
                      "type": "string"
                    },
                    "journeyId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "email",
                    "timestamp",
                    "event",
                    "sg_event_id",
                    "sg_message_id"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-twilio-email-event-webhook-signature",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-twilio-email-event-webhook-timestamp",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/public/webhooks/amazon-ses": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Used to consume amazonses notification events.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "Type": {
                        "type": "string",
                        "enum": [
                          "Notification"
                        ]
                      },
                      "Message": {
                        "type": "string"
                      },
                      "MessageId": {
                        "type": "string"
                      },
                      "Subject": {
                        "type": "string"
                      },
                      "TopicArn": {
                        "type": "string"
                      },
                      "Timestamp": {
                        "type": "string"
                      },
                      "SignatureVersion": {
                        "anyOf": [
                          {
                            "type": "string",
                            "enum": [
                              "1"
                            ]
                          },
                          {
                            "type": "string",
                            "enum": [
                              "2"
                            ]
                          }
                        ]
                      },
                      "Signature": {
                        "type": "string"
                      },
                      "SigningCertURL": {
                        "type": "string"
                      },
                      "UnsubscribeURL": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "Type",
                      "Message",
                      "MessageId",
                      "TopicArn",
                      "Timestamp",
                      "SignatureVersion",
                      "Signature",
                      "SigningCertURL",
                      "UnsubscribeURL"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "Type": {
                        "type": "string",
                        "enum": [
                          "SubscriptionConfirmation"
                        ]
                      },
                      "Token": {
                        "type": "string"
                      },
                      "TopicArn": {
                        "type": "string"
                      },
                      "SubscribeURL": {
                        "type": "string"
                      },
                      "Signature": {
                        "type": "string"
                      },
                      "SignatureVersion": {
                        "anyOf": [
                          {
                            "type": "string",
                            "enum": [
                              "1"
                            ]
                          },
                          {
                            "type": "string",
                            "enum": [
                              "2"
                            ]
                          }
                        ]
                      },
                      "SigningCertURL": {
                        "type": "string"
                      },
                      "Message": {
                        "type": "string"
                      },
                      "MessageId": {
                        "type": "string"
                      },
                      "Timestamp": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "Type",
                      "Token",
                      "TopicArn",
                      "SubscribeURL",
                      "Signature",
                      "SignatureVersion",
                      "SigningCertURL",
                      "Message",
                      "MessageId",
                      "Timestamp"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "Type": {
                        "type": "string",
                        "enum": [
                          "UnsubscribeConfirmation"
                        ]
                      },
                      "Token": {
                        "type": "string"
                      },
                      "TopicArn": {
                        "type": "string"
                      },
                      "SubscribeURL": {
                        "type": "string"
                      },
                      "Signature": {
                        "type": "string"
                      },
                      "SignatureVersion": {
                        "anyOf": [
                          {
                            "type": "string",
                            "enum": [
                              "1"
                            ]
                          },
                          {
                            "type": "string",
                            "enum": [
                              "2"
                            ]
                          }
                        ]
                      },
                      "SigningCertURL": {
                        "type": "string"
                      },
                      "Message": {
                        "type": "string"
                      },
                      "MessageId": {
                        "type": "string"
                      },
                      "Timestamp": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "Type",
                      "Token",
                      "TopicArn",
                      "SubscribeURL",
                      "Signature",
                      "SignatureVersion",
                      "SigningCertURL",
                      "Message",
                      "MessageId",
                      "Timestamp"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/public/webhooks/resend": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Used to consume resend webhook payloads.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "created_at": {
                    "type": "string"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "email_id": {
                        "type": "string"
                      },
                      "from": {
                        "type": "string"
                      },
                      "subject": {
                        "type": "string"
                      },
                      "to": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "tags": {
                        "type": "object",
                        "properties": {
                          "workspaceId": {
                            "type": "string"
                          },
                          "runId": {
                            "type": "string"
                          },
                          "messageId": {
                            "type": "string"
                          },
                          "userId": {
                            "type": "string"
                          },
                          "templateId": {
                            "type": "string"
                          },
                          "nodeId": {
                            "type": "string"
                          },
                          "journeyId": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "required": [
                      "created_at",
                      "email_id",
                      "from",
                      "subject",
                      "to",
                      "tags"
                    ]
                  },
                  "type": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "email.sent"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "email.delivered"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "email.delivery_delayed"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "email.complained"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "email.bounced"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "email.opened"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "email.clicked"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "created_at",
                  "data",
                  "type"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "svix-id",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "svix-timestamp",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "svix-signature",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/public/webhooks/postmark": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Used to consume postmark webhook payloads.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "MessageStream": {
                    "type": "string"
                  },
                  "Tag": {
                    "type": "string"
                  },
                  "MessageID": {
                    "type": "string"
                  },
                  "Metadata": {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  "RecordType": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "Delivery"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "SpamComplaint"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "Bounce"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "Open"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "Click"
                        ]
                      }
                    ]
                  },
                  "BouncedAt": {
                    "type": "string"
                  },
                  "DeliveredAt": {
                    "type": "string"
                  },
                  "ReceivedAt": {
                    "type": "string"
                  },
                  "workspaceId": {
                    "type": "string"
                  },
                  "runId": {
                    "type": "string"
                  },
                  "messageId": {
                    "type": "string"
                  },
                  "userId": {
                    "type": "string"
                  },
                  "templateId": {
                    "type": "string"
                  },
                  "nodeId": {
                    "type": "string"
                  },
                  "journeyId": {
                    "type": "string"
                  }
                },
                "required": [
                  "MessageStream",
                  "Tag",
                  "MessageID",
                  "Metadata",
                  "RecordType"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-postmark-secret",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/public/webhooks/twilio": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Used to consume Twilio webhook payloads.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SmsSid": {
                    "type": "string"
                  },
                  "MessagingServiceSid": {
                    "type": "string"
                  },
                  "SmsStatus": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "queued"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "sending"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "sent"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "failed"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "delivered"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "undelivered"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "receiving"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "received"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "accepted"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "scheduled"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "read"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "partially_delivered"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "canceled"
                        ]
                      }
                    ]
                  },
                  "Body": {
                    "type": "string"
                  },
                  "To": {
                    "type": "string"
                  },
                  "MessageSid": {
                    "type": "string"
                  },
                  "AccountSid": {
                    "type": "string"
                  },
                  "From": {
                    "type": "string"
                  },
                  "ApiVersion": {
                    "type": "string"
                  }
                },
                "required": [
                  "SmsSid",
                  "MessagingServiceSid",
                  "SmsStatus",
                  "To",
                  "MessageSid",
                  "AccountSid",
                  "From",
                  "ApiVersion"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "workspaceId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "userId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "subscriptionGroupId",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-twilio-signature",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/public/webhooks/segment": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Used to consume segment.io webhook payloads. Must be exposed publicly to the internet.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "properties": {
                  "messageId": {
                    "type": "string"
                  },
                  "timestamp": {
                    "type": "string"
                  }
                },
                "required": [
                  "messageId",
                  "timestamp"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-signature",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "df-workspace-id",
            "required": false,
            "description": "Id of the workspace which will receive the segment payload. Defaults to the default workspace id, for single tenant systems"
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/admin/users/": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Get list of users",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cursor": {
                    "type": "string"
                  },
                  "segmentFilter": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "limit": {
                    "type": "number"
                  },
                  "direction": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "after"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "before"
                        ]
                      }
                    ]
                  },
                  "userIds": {
                    "type": "array",
                    "items": {
                      "description": "Unique identifier for the user. Should be the id of the user in your system. Only applicable to logged in users.",
                      "examples": [
                        "1043",
                        "user-123",
                        "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b"
                      ],
                      "type": "string"
                    }
                  },
                  "userPropertyFilter": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "values": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "id",
                        "values"
                      ]
                    }
                  },
                  "workspaceId": {
                    "type": "string"
                  }
                },
                "required": [
                  "workspaceId"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "properties": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {}
                              },
                              "required": [
                                "name",
                                "value"
                              ]
                            }
                          },
                          "segments": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name"
                              ]
                            }
                          }
                        },
                        "required": [
                          "id",
                          "properties",
                          "segments"
                        ]
                      }
                    },
                    "previousCursor": {
                      "type": "string"
                    },
                    "nextCursor": {
                      "type": "string"
                    },
                    "userCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "users",
                    "userCount"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "Delete events, and computed properties and segments for specific users.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "workspaceId": {
                    "type": "string"
                  },
                  "userIds": {
                    "type": "array",
                    "items": {
                      "description": "Unique identifier for the user. Should be the id of the user in your system. Only applicable to logged in users.",
                      "examples": [
                        "1043",
                        "user-123",
                        "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b"
                      ],
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "workspaceId",
                  "userIds"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "An empty String",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An empty String",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/events/": {
      "get": {
        "tags": [
          "Events"
        ],
        "description": "Get list of events",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "workspaceId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "searchTerm",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "examples": {
              "1043": {
                "value": "1043"
              },
              "user-123": {
                "value": "user-123"
              },
              "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b": {
                "value": "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b"
              }
            },
            "in": "query",
            "name": "userId",
            "required": false,
            "description": "Unique identifier for the user. Should be the id of the user in your system. Only applicable to logged in users."
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "offset",
            "required": true
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "limit",
            "required": true
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "startDate",
            "required": false
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "endDate",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "events": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "messageId": {
                            "type": "string"
                          },
                          "eventType": {
                            "type": "string"
                          },
                          "event": {
                            "type": "string"
                          },
                          "userId": {
                            "anyOf": [
                              {
                                "description": "Unique identifier for the user. Should be the id of the user in your system. Only applicable to logged in users.",
                                "examples": [
                                  "1043",
                                  "user-123",
                                  "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b"
                                ],
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "anonymousId": {
                            "anyOf": [
                              {
                                "description": "Identifier for a logged out user. It can be any pseudo-unique identifier, for example a session Id or a UUID.",
                                "examples": [
                                  "0a58e5e4-c753-477e-a6c4-f9b0e3396b9b",
                                  "session-123"
                                ],
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "processingTime": {
                            "type": "string"
                          },
                          "eventTime": {
                            "type": "string"
                          },
                          "traits": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "messageId",
                          "eventType",
                          "event",
                          "userId",
                          "anonymousId",
                          "processingTime",
                          "eventTime",
                          "traits"
                        ]
                      }
                    },
                    "count": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "events",
                    "count"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/events/traits": {
      "get": {
        "tags": [
          "Events"
        ],
        "description": "Get list of traits available on identify calls",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "workspaceId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "traits": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "traits"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/user-properties/": {
      "put": {
        "tags": [
          "User Properties"
        ],
        "description": "Create or update a user property.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "workspaceId": {
                        "type": "string"
                      },
                      "definition": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Id"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "AnonymousId"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Group"
                                ]
                              },
                              "entry": {
                                "type": "string"
                              },
                              "nodes": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "AnyOf"
                                          ]
                                        },
                                        "children": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "type",
                                        "children"
                                      ]
                                    },
                                    {
                                      "anyOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "Trait"
                                              ]
                                            },
                                            "path": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "path"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "Performed"
                                              ]
                                            },
                                            "event": {
                                              "type": "string"
                                            },
                                            "path": {
                                              "type": "string"
                                            },
                                            "properties": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "type": "string"
                                                  },
                                                  "operator": {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "Equals"
                                                        ]
                                                      },
                                                      "value": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "value"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "path",
                                                  "operator"
                                                ]
                                              }
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "event",
                                            "path"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "type",
                              "entry",
                              "nodes"
                            ]
                          },
                          {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "Trait"
                                    ]
                                  },
                                  "path": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "path"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "Performed"
                                    ]
                                  },
                                  "event": {
                                    "type": "string"
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "properties": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "Equals"
                                              ]
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "value"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "path",
                                        "operator"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "type",
                                  "event",
                                  "path"
                                ]
                              }
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "PerformedMany"
                                ]
                              },
                              "or": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "event": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "event"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "type",
                              "or"
                            ]
                          }
                        ]
                      },
                      "exampleValue": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "number"
                      },
                      "lastRecomputed": {
                        "type": "number"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "definition": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Id"
                              ]
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "AnonymousId"
                              ]
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Group"
                              ]
                            },
                            "entry": {
                              "type": "string"
                            },
                            "nodes": {
                              "type": "array",
                              "items": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "AnyOf"
                                        ]
                                      },
                                      "children": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "type",
                                      "children"
                                    ]
                                  },
                                  {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "Trait"
                                            ]
                                          },
                                          "path": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "path"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "Performed"
                                            ]
                                          },
                                          "event": {
                                            "type": "string"
                                          },
                                          "path": {
                                            "type": "string"
                                          },
                                          "properties": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "path": {
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "Equals"
                                                      ]
                                                    },
                                                    "value": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "value"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "path",
                                                "operator"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "event",
                                          "path"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "required": [
                            "type",
                            "entry",
                            "nodes"
                          ]
                        },
                        {
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "Trait"
                                  ]
                                },
                                "path": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type",
                                "path"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "Performed"
                                  ]
                                },
                                "event": {
                                  "type": "string"
                                },
                                "path": {
                                  "type": "string"
                                },
                                "properties": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "path": {
                                        "type": "string"
                                      },
                                      "operator": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "Equals"
                                            ]
                                          },
                                          "value": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "value"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "path",
                                      "operator"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "type",
                                "event",
                                "path"
                              ]
                            }
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "PerformedMany"
                              ]
                            },
                            "or": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "event": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "event"
                                ]
                              }
                            }
                          },
                          "required": [
                            "type",
                            "or"
                          ]
                        }
                      ]
                    },
                    "exampleValue": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "number"
                    },
                    "lastRecomputed": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "id",
                    "workspaceId",
                    "name",
                    "definition",
                    "updatedAt"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "User Properties"
        ],
        "description": "Get all user properties.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "workspaceId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userProperties": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "workspaceId": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "definition": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "Id"
                                    ]
                                  }
                                },
                                "required": [
                                  "type"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "AnonymousId"
                                    ]
                                  }
                                },
                                "required": [
                                  "type"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "Group"
                                    ]
                                  },
                                  "entry": {
                                    "type": "string"
                                  },
                                  "nodes": {
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "AnyOf"
                                              ]
                                            },
                                            "children": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "type",
                                            "children"
                                          ]
                                        },
                                        {
                                          "anyOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Trait"
                                                  ]
                                                },
                                                "path": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "path"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Performed"
                                                  ]
                                                },
                                                "event": {
                                                  "type": "string"
                                                },
                                                "path": {
                                                  "type": "string"
                                                },
                                                "properties": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "path": {
                                                        "type": "string"
                                                      },
                                                      "operator": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string",
                                                            "enum": [
                                                              "Equals"
                                                            ]
                                                          },
                                                          "value": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "required": [
                                                          "type",
                                                          "value"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "path",
                                                      "operator"
                                                    ]
                                                  }
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "event",
                                                "path"
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "type",
                                  "entry",
                                  "nodes"
                                ]
                              },
                              {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "Trait"
                                        ]
                                      },
                                      "path": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "path"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "Performed"
                                        ]
                                      },
                                      "event": {
                                        "type": "string"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "properties": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "path": {
                                              "type": "string"
                                            },
                                            "operator": {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Equals"
                                                  ]
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "value"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "path",
                                            "operator"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "event",
                                      "path"
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "PerformedMany"
                                    ]
                                  },
                                  "or": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "event": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "event"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "type",
                                  "or"
                                ]
                              }
                            ]
                          },
                          "exampleValue": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "number"
                          },
                          "lastRecomputed": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "id",
                          "workspaceId",
                          "name",
                          "definition",
                          "updatedAt"
                        ]
                      }
                    }
                  },
                  "required": [
                    "userProperties"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User Properties"
        ],
        "description": "Delete a user property.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "workspaceId": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                },
                "required": [
                  "workspaceId",
                  "id"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "An empty String",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An empty String",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "An empty String",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An empty String",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/segments/": {
      "put": {
        "tags": [
          "Segments"
        ],
        "description": "Create or update a user segment.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "workspaceId": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "definition": {
                        "type": "object",
                        "properties": {
                          "entryNode": {
                            "anyOf": [
                              {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "Trait"
                                        ]
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "operator": {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "Within"
                                                ]
                                              },
                                              "windowSeconds": {
                                                "type": "number"
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "windowSeconds"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "Equals"
                                                ]
                                              },
                                              "value": {
                                                "anyOf": [
                                                  {
                                                    "type": "string"
                                                  },
                                                  {
                                                    "type": "number"
                                                  }
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "value"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "NotEquals"
                                                ]
                                              },
                                              "value": {
                                                "anyOf": [
                                                  {
                                                    "type": "string"
                                                  },
                                                  {
                                                    "type": "number"
                                                  }
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "value"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "HasBeen"
                                                ]
                                              },
                                              "comparator": {
                                                "anyOf": [
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "GTE"
                                                    ]
                                                  },
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "LT"
                                                    ]
                                                  }
                                                ]
                                              },
                                              "value": {
                                                "anyOf": [
                                                  {
                                                    "type": "string"
                                                  },
                                                  {
                                                    "type": "number"
                                                  }
                                                ]
                                              },
                                              "windowSeconds": {
                                                "type": "number"
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "comparator",
                                              "value",
                                              "windowSeconds"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "Exists"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type"
                                            ]
                                          }
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id",
                                      "path",
                                      "operator"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "And"
                                        ]
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "children": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id",
                                      "children"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "Or"
                                        ]
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "children": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id",
                                      "children"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "Performed"
                                        ]
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "event": {
                                        "type": "string"
                                      },
                                      "times": {
                                        "type": "number"
                                      },
                                      "timesOperator": {
                                        "anyOf": [
                                          {
                                            "type": "string",
                                            "enum": [
                                              "="
                                            ]
                                          },
                                          {
                                            "type": "string",
                                            "enum": [
                                              ">="
                                            ]
                                          },
                                          {
                                            "type": "string",
                                            "enum": [
                                              "<"
                                            ]
                                          }
                                        ]
                                      },
                                      "withinSeconds": {
                                        "type": "number"
                                      },
                                      "properties": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "path": {
                                              "type": "string"
                                            },
                                            "operator": {
                                              "anyOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "Within"
                                                      ]
                                                    },
                                                    "windowSeconds": {
                                                      "type": "number"
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "windowSeconds"
                                                  ]
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "Equals"
                                                      ]
                                                    },
                                                    "value": {
                                                      "anyOf": [
                                                        {
                                                          "type": "string"
                                                        },
                                                        {
                                                          "type": "number"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "value"
                                                  ]
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "NotEquals"
                                                      ]
                                                    },
                                                    "value": {
                                                      "anyOf": [
                                                        {
                                                          "type": "string"
                                                        },
                                                        {
                                                          "type": "number"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "value"
                                                  ]
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "HasBeen"
                                                      ]
                                                    },
                                                    "comparator": {
                                                      "anyOf": [
                                                        {
                                                          "type": "string",
                                                          "enum": [
                                                            "GTE"
                                                          ]
                                                        },
                                                        {
                                                          "type": "string",
                                                          "enum": [
                                                            "LT"
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    "value": {
                                                      "anyOf": [
                                                        {
                                                          "type": "string"
                                                        },
                                                        {
                                                          "type": "number"
                                                        }
                                                      ]
                                                    },
                                                    "windowSeconds": {
                                                      "type": "number"
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "comparator",
                                                    "value",
                                                    "windowSeconds"
                                                  ]
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "Exists"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type"
                                                  ]
                                                }
                                              ]
                                            }
                                          },
                                          "required": [
                                            "path",
                                            "operator"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id",
                                      "event"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "LastPerformed"
                                        ]
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "event": {
                                        "type": "string"
                                      },
                                      "whereProperties": {
                                        "description": "Used to select which events are eligible to be considered.",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "path": {
                                              "type": "string"
                                            },
                                            "operator": {
                                              "anyOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "Within"
                                                      ]
                                                    },
                                                    "windowSeconds": {
                                                      "type": "number"
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "windowSeconds"
                                                  ]
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "Equals"
                                                      ]
                                                    },
                                                    "value": {
                                                      "anyOf": [
                                                        {
                                                          "type": "string"
                                                        },
                                                        {
                                                          "type": "number"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "value"
                                                  ]
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "NotEquals"
                                                      ]
                                                    },
                                                    "value": {
                                                      "anyOf": [
                                                        {
                                                          "type": "string"
                                                        },
                                                        {
                                                          "type": "number"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "value"
                                                  ]
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "HasBeen"
                                                      ]
                                                    },
                                                    "comparator": {
                                                      "anyOf": [
                                                        {
                                                          "type": "string",
                                                          "enum": [
                                                            "GTE"
                                                          ]
                                                        },
                                                        {
                                                          "type": "string",
                                                          "enum": [
                                                            "LT"
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    "value": {
                                                      "anyOf": [
                                                        {
                                                          "type": "string"
                                                        },
                                                        {
                                                          "type": "number"
                                                        }
                                                      ]
                                                    },
                                                    "windowSeconds": {
                                                      "type": "number"
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "comparator",
                                                    "value",
                                                    "windowSeconds"
                                                  ]
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "Exists"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type"
                                                  ]
                                                }
                                              ]
                                            }
                                          },
                                          "required": [
                                            "path",
                                            "operator"
                                          ]
                                        }
                                      },
                                      "hasProperties": {
                                        "description": "Used to evaluate whether the user is in the segment based on the properties of the selected event.",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "path": {
                                              "type": "string"
                                            },
                                            "operator": {
                                              "anyOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "Within"
                                                      ]
                                                    },
                                                    "windowSeconds": {
                                                      "type": "number"
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "windowSeconds"
                                                  ]
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "Equals"
                                                      ]
                                                    },
                                                    "value": {
                                                      "anyOf": [
                                                        {
                                                          "type": "string"
                                                        },
                                                        {
                                                          "type": "number"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "value"
                                                  ]
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "NotEquals"
                                                      ]
                                                    },
                                                    "value": {
                                                      "anyOf": [
                                                        {
                                                          "type": "string"
                                                        },
                                                        {
                                                          "type": "number"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "value"
                                                  ]
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "HasBeen"
                                                      ]
                                                    },
                                                    "comparator": {
                                                      "anyOf": [
                                                        {
                                                          "type": "string",
                                                          "enum": [
                                                            "GTE"
                                                          ]
                                                        },
                                                        {
                                                          "type": "string",
                                                          "enum": [
                                                            "LT"
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    "value": {
                                                      "anyOf": [
                                                        {
                                                          "type": "string"
                                                        },
                                                        {
                                                          "type": "number"
                                                        }
                                                      ]
                                                    },
                                                    "windowSeconds": {
                                                      "type": "number"
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "comparator",
                                                    "value",
                                                    "windowSeconds"
                                                  ]
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "Exists"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type"
                                                  ]
                                                }
                                              ]
                                            }
                                          },
                                          "required": [
                                            "path",
                                            "operator"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id",
                                      "event",
                                      "hasProperties"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "Email"
                                        ]
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "event": {
                                        "anyOf": [
                                          {
                                            "type": "string",
                                            "enum": [
                                              "DFInternalMessageSent"
                                            ]
                                          },
                                          {
                                            "type": "string",
                                            "enum": [
                                              "DFEmailDropped"
                                            ]
                                          },
                                          {
                                            "type": "string",
                                            "enum": [
                                              "DFEmailDelivered"
                                            ]
                                          },
                                          {
                                            "type": "string",
                                            "enum": [
                                              "DFEmailOpened"
                                            ]
                                          },
                                          {
                                            "type": "string",
                                            "enum": [
                                              "DFEmailClicked"
                                            ]
                                          },
                                          {
                                            "type": "string",
                                            "enum": [
                                              "DFEmailBounced"
                                            ]
                                          },
                                          {
                                            "type": "string",
                                            "enum": [
                                              "DFEmailMarkedSpam"
                                            ]
                                          }
                                        ]
                                      },
                                      "times": {
                                        "type": "number"
                                      },
                                      "templateId": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id",
                                      "event",
                                      "templateId"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "Broadcast"
                                        ]
                                      },
                                      "id": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "SubscriptionGroup"
                                        ]
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "subscriptionGroupId": {
                                        "type": "string"
                                      },
                                      "subscriptionGroupType": {
                                        "anyOf": [
                                          {
                                            "type": "string",
                                            "enum": [
                                              "OptIn"
                                            ]
                                          },
                                          {
                                            "type": "string",
                                            "enum": [
                                              "OptOut"
                                            ]
                                          }
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "id",
                                      "subscriptionGroupId",
                                      "subscriptionGroupType"
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "Manual"
                                    ]
                                  },
                                  "version": {
                                    "type": "number"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "version",
                                  "id"
                                ]
                              }
                            ]
                          },
                          "nodes": {
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Trait"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "path": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "anyOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "Within"
                                              ]
                                            },
                                            "windowSeconds": {
                                              "type": "number"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "windowSeconds"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "Equals"
                                              ]
                                            },
                                            "value": {
                                              "anyOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "number"
                                                }
                                              ]
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "value"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "NotEquals"
                                              ]
                                            },
                                            "value": {
                                              "anyOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "number"
                                                }
                                              ]
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "value"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "HasBeen"
                                              ]
                                            },
                                            "comparator": {
                                              "anyOf": [
                                                {
                                                  "type": "string",
                                                  "enum": [
                                                    "GTE"
                                                  ]
                                                },
                                                {
                                                  "type": "string",
                                                  "enum": [
                                                    "LT"
                                                  ]
                                                }
                                              ]
                                            },
                                            "value": {
                                              "anyOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "number"
                                                }
                                              ]
                                            },
                                            "windowSeconds": {
                                              "type": "number"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "comparator",
                                            "value",
                                            "windowSeconds"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "Exists"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "type"
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id",
                                    "path",
                                    "operator"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "And"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "children": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id",
                                    "children"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Or"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "children": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id",
                                    "children"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Performed"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "event": {
                                      "type": "string"
                                    },
                                    "times": {
                                      "type": "number"
                                    },
                                    "timesOperator": {
                                      "anyOf": [
                                        {
                                          "type": "string",
                                          "enum": [
                                            "="
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            ">="
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "<"
                                          ]
                                        }
                                      ]
                                    },
                                    "withinSeconds": {
                                      "type": "number"
                                    },
                                    "properties": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "path": {
                                            "type": "string"
                                          },
                                          "operator": {
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Within"
                                                    ]
                                                  },
                                                  "windowSeconds": {
                                                    "type": "number"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "windowSeconds"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Equals"
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "value"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "NotEquals"
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "value"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "HasBeen"
                                                    ]
                                                  },
                                                  "comparator": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string",
                                                        "enum": [
                                                          "GTE"
                                                        ]
                                                      },
                                                      {
                                                        "type": "string",
                                                        "enum": [
                                                          "LT"
                                                        ]
                                                      }
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  },
                                                  "windowSeconds": {
                                                    "type": "number"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "comparator",
                                                  "value",
                                                  "windowSeconds"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Exists"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ]
                                              }
                                            ]
                                          }
                                        },
                                        "required": [
                                          "path",
                                          "operator"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id",
                                    "event"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "LastPerformed"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "event": {
                                      "type": "string"
                                    },
                                    "whereProperties": {
                                      "description": "Used to select which events are eligible to be considered.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "path": {
                                            "type": "string"
                                          },
                                          "operator": {
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Within"
                                                    ]
                                                  },
                                                  "windowSeconds": {
                                                    "type": "number"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "windowSeconds"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Equals"
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "value"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "NotEquals"
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "value"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "HasBeen"
                                                    ]
                                                  },
                                                  "comparator": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string",
                                                        "enum": [
                                                          "GTE"
                                                        ]
                                                      },
                                                      {
                                                        "type": "string",
                                                        "enum": [
                                                          "LT"
                                                        ]
                                                      }
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  },
                                                  "windowSeconds": {
                                                    "type": "number"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "comparator",
                                                  "value",
                                                  "windowSeconds"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Exists"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ]
                                              }
                                            ]
                                          }
                                        },
                                        "required": [
                                          "path",
                                          "operator"
                                        ]
                                      }
                                    },
                                    "hasProperties": {
                                      "description": "Used to evaluate whether the user is in the segment based on the properties of the selected event.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "path": {
                                            "type": "string"
                                          },
                                          "operator": {
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Within"
                                                    ]
                                                  },
                                                  "windowSeconds": {
                                                    "type": "number"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "windowSeconds"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Equals"
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "value"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "NotEquals"
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "value"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "HasBeen"
                                                    ]
                                                  },
                                                  "comparator": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string",
                                                        "enum": [
                                                          "GTE"
                                                        ]
                                                      },
                                                      {
                                                        "type": "string",
                                                        "enum": [
                                                          "LT"
                                                        ]
                                                      }
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  },
                                                  "windowSeconds": {
                                                    "type": "number"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "comparator",
                                                  "value",
                                                  "windowSeconds"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Exists"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ]
                                              }
                                            ]
                                          }
                                        },
                                        "required": [
                                          "path",
                                          "operator"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id",
                                    "event",
                                    "hasProperties"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Email"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "event": {
                                      "anyOf": [
                                        {
                                          "type": "string",
                                          "enum": [
                                            "DFInternalMessageSent"
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "DFEmailDropped"
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "DFEmailDelivered"
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "DFEmailOpened"
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "DFEmailClicked"
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "DFEmailBounced"
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "DFEmailMarkedSpam"
                                          ]
                                        }
                                      ]
                                    },
                                    "times": {
                                      "type": "number"
                                    },
                                    "templateId": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id",
                                    "event",
                                    "templateId"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Broadcast"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "SubscriptionGroup"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "subscriptionGroupId": {
                                      "type": "string"
                                    },
                                    "subscriptionGroupType": {
                                      "anyOf": [
                                        {
                                          "type": "string",
                                          "enum": [
                                            "OptIn"
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "OptOut"
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id",
                                    "subscriptionGroupId",
                                    "subscriptionGroupType"
                                  ]
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "entryNode",
                          "nodes"
                        ]
                      },
                      "subscriptionGroupId": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "number"
                      },
                      "lastRecomputed": {
                        "type": "number"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "definition": {
                      "type": "object",
                      "properties": {
                        "entryNode": {
                          "anyOf": [
                            {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Trait"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "path": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "anyOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "Within"
                                              ]
                                            },
                                            "windowSeconds": {
                                              "type": "number"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "windowSeconds"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "Equals"
                                              ]
                                            },
                                            "value": {
                                              "anyOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "number"
                                                }
                                              ]
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "value"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "NotEquals"
                                              ]
                                            },
                                            "value": {
                                              "anyOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "number"
                                                }
                                              ]
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "value"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "HasBeen"
                                              ]
                                            },
                                            "comparator": {
                                              "anyOf": [
                                                {
                                                  "type": "string",
                                                  "enum": [
                                                    "GTE"
                                                  ]
                                                },
                                                {
                                                  "type": "string",
                                                  "enum": [
                                                    "LT"
                                                  ]
                                                }
                                              ]
                                            },
                                            "value": {
                                              "anyOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "number"
                                                }
                                              ]
                                            },
                                            "windowSeconds": {
                                              "type": "number"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "comparator",
                                            "value",
                                            "windowSeconds"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "Exists"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "type"
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id",
                                    "path",
                                    "operator"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "And"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "children": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id",
                                    "children"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Or"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "children": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id",
                                    "children"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Performed"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "event": {
                                      "type": "string"
                                    },
                                    "times": {
                                      "type": "number"
                                    },
                                    "timesOperator": {
                                      "anyOf": [
                                        {
                                          "type": "string",
                                          "enum": [
                                            "="
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            ">="
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "<"
                                          ]
                                        }
                                      ]
                                    },
                                    "withinSeconds": {
                                      "type": "number"
                                    },
                                    "properties": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "path": {
                                            "type": "string"
                                          },
                                          "operator": {
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Within"
                                                    ]
                                                  },
                                                  "windowSeconds": {
                                                    "type": "number"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "windowSeconds"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Equals"
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "value"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "NotEquals"
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "value"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "HasBeen"
                                                    ]
                                                  },
                                                  "comparator": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string",
                                                        "enum": [
                                                          "GTE"
                                                        ]
                                                      },
                                                      {
                                                        "type": "string",
                                                        "enum": [
                                                          "LT"
                                                        ]
                                                      }
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  },
                                                  "windowSeconds": {
                                                    "type": "number"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "comparator",
                                                  "value",
                                                  "windowSeconds"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Exists"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ]
                                              }
                                            ]
                                          }
                                        },
                                        "required": [
                                          "path",
                                          "operator"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id",
                                    "event"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "LastPerformed"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "event": {
                                      "type": "string"
                                    },
                                    "whereProperties": {
                                      "description": "Used to select which events are eligible to be considered.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "path": {
                                            "type": "string"
                                          },
                                          "operator": {
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Within"
                                                    ]
                                                  },
                                                  "windowSeconds": {
                                                    "type": "number"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "windowSeconds"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Equals"
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "value"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "NotEquals"
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "value"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "HasBeen"
                                                    ]
                                                  },
                                                  "comparator": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string",
                                                        "enum": [
                                                          "GTE"
                                                        ]
                                                      },
                                                      {
                                                        "type": "string",
                                                        "enum": [
                                                          "LT"
                                                        ]
                                                      }
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  },
                                                  "windowSeconds": {
                                                    "type": "number"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "comparator",
                                                  "value",
                                                  "windowSeconds"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Exists"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ]
                                              }
                                            ]
                                          }
                                        },
                                        "required": [
                                          "path",
                                          "operator"
                                        ]
                                      }
                                    },
                                    "hasProperties": {
                                      "description": "Used to evaluate whether the user is in the segment based on the properties of the selected event.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "path": {
                                            "type": "string"
                                          },
                                          "operator": {
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Within"
                                                    ]
                                                  },
                                                  "windowSeconds": {
                                                    "type": "number"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "windowSeconds"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Equals"
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "value"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "NotEquals"
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "value"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "HasBeen"
                                                    ]
                                                  },
                                                  "comparator": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string",
                                                        "enum": [
                                                          "GTE"
                                                        ]
                                                      },
                                                      {
                                                        "type": "string",
                                                        "enum": [
                                                          "LT"
                                                        ]
                                                      }
                                                    ]
                                                  },
                                                  "value": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "number"
                                                      }
                                                    ]
                                                  },
                                                  "windowSeconds": {
                                                    "type": "number"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "comparator",
                                                  "value",
                                                  "windowSeconds"
                                                ]
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "Exists"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ]
                                              }
                                            ]
                                          }
                                        },
                                        "required": [
                                          "path",
                                          "operator"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id",
                                    "event",
                                    "hasProperties"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Email"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "event": {
                                      "anyOf": [
                                        {
                                          "type": "string",
                                          "enum": [
                                            "DFInternalMessageSent"
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "DFEmailDropped"
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "DFEmailDelivered"
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "DFEmailOpened"
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "DFEmailClicked"
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "DFEmailBounced"
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "DFEmailMarkedSpam"
                                          ]
                                        }
                                      ]
                                    },
                                    "times": {
                                      "type": "number"
                                    },
                                    "templateId": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id",
                                    "event",
                                    "templateId"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Broadcast"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "SubscriptionGroup"
                                      ]
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "subscriptionGroupId": {
                                      "type": "string"
                                    },
                                    "subscriptionGroupType": {
                                      "anyOf": [
                                        {
                                          "type": "string",
                                          "enum": [
                                            "OptIn"
                                          ]
                                        },
                                        {
                                          "type": "string",
                                          "enum": [
                                            "OptOut"
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "id",
                                    "subscriptionGroupId",
                                    "subscriptionGroupType"
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "Manual"
                                  ]
                                },
                                "version": {
                                  "type": "number"
                                },
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type",
                                "version",
                                "id"
                              ]
                            }
                          ]
                        },
                        "nodes": {
                          "type": "array",
                          "items": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "Trait"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "operator": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "Within"
                                            ]
                                          },
                                          "windowSeconds": {
                                            "type": "number"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "windowSeconds"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "Equals"
                                            ]
                                          },
                                          "value": {
                                            "anyOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "number"
                                              }
                                            ]
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "value"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "NotEquals"
                                            ]
                                          },
                                          "value": {
                                            "anyOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "number"
                                              }
                                            ]
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "value"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "HasBeen"
                                            ]
                                          },
                                          "comparator": {
                                            "anyOf": [
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "GTE"
                                                ]
                                              },
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "LT"
                                                ]
                                              }
                                            ]
                                          },
                                          "value": {
                                            "anyOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "number"
                                              }
                                            ]
                                          },
                                          "windowSeconds": {
                                            "type": "number"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "comparator",
                                          "value",
                                          "windowSeconds"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "Exists"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "type",
                                  "id",
                                  "path",
                                  "operator"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "And"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "children": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "required": [
                                  "type",
                                  "id",
                                  "children"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "Or"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "children": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "required": [
                                  "type",
                                  "id",
                                  "children"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "Performed"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "event": {
                                    "type": "string"
                                  },
                                  "times": {
                                    "type": "number"
                                  },
                                  "timesOperator": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "="
                                        ]
                                      },
                                      {
                                        "type": "string",
                                        "enum": [
                                          ">="
                                        ]
                                      },
                                      {
                                        "type": "string",
                                        "enum": [
                                          "<"
                                        ]
                                      }
                                    ]
                                  },
                                  "withinSeconds": {
                                    "type": "number"
                                  },
                                  "properties": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "anyOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Within"
                                                  ]
                                                },
                                                "windowSeconds": {
                                                  "type": "number"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "windowSeconds"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Equals"
                                                  ]
                                                },
                                                "value": {
                                                  "anyOf": [
                                                    {
                                                      "type": "string"
                                                    },
                                                    {
                                                      "type": "number"
                                                    }
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "value"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "NotEquals"
                                                  ]
                                                },
                                                "value": {
                                                  "anyOf": [
                                                    {
                                                      "type": "string"
                                                    },
                                                    {
                                                      "type": "number"
                                                    }
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "value"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "HasBeen"
                                                  ]
                                                },
                                                "comparator": {
                                                  "anyOf": [
                                                    {
                                                      "type": "string",
                                                      "enum": [
                                                        "GTE"
                                                      ]
                                                    },
                                                    {
                                                      "type": "string",
                                                      "enum": [
                                                        "LT"
                                                      ]
                                                    }
                                                  ]
                                                },
                                                "value": {
                                                  "anyOf": [
                                                    {
                                                      "type": "string"
                                                    },
                                                    {
                                                      "type": "number"
                                                    }
                                                  ]
                                                },
                                                "windowSeconds": {
                                                  "type": "number"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "comparator",
                                                "value",
                                                "windowSeconds"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Exists"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      "required": [
                                        "path",
                                        "operator"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "type",
                                  "id",
                                  "event"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "LastPerformed"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "event": {
                                    "type": "string"
                                  },
                                  "whereProperties": {
                                    "description": "Used to select which events are eligible to be considered.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "anyOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Within"
                                                  ]
                                                },
                                                "windowSeconds": {
                                                  "type": "number"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "windowSeconds"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Equals"
                                                  ]
                                                },
                                                "value": {
                                                  "anyOf": [
                                                    {
                                                      "type": "string"
                                                    },
                                                    {
                                                      "type": "number"
                                                    }
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "value"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "NotEquals"
                                                  ]
                                                },
                                                "value": {
                                                  "anyOf": [
                                                    {
                                                      "type": "string"
                                                    },
                                                    {
                                                      "type": "number"
                                                    }
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "value"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "HasBeen"
                                                  ]
                                                },
                                                "comparator": {
                                                  "anyOf": [
                                                    {
                                                      "type": "string",
                                                      "enum": [
                                                        "GTE"
                                                      ]
                                                    },
                                                    {
                                                      "type": "string",
                                                      "enum": [
                                                        "LT"
                                                      ]
                                                    }
                                                  ]
                                                },
                                                "value": {
                                                  "anyOf": [
                                                    {
                                                      "type": "string"
                                                    },
                                                    {
                                                      "type": "number"
                                                    }
                                                  ]
                                                },
                                                "windowSeconds": {
                                                  "type": "number"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "comparator",
                                                "value",
                                                "windowSeconds"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Exists"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      "required": [
                                        "path",
                                        "operator"
                                      ]
                                    }
                                  },
                                  "hasProperties": {
                                    "description": "Used to evaluate whether the user is in the segment based on the properties of the selected event.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "anyOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Within"
                                                  ]
                                                },
                                                "windowSeconds": {
                                                  "type": "number"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "windowSeconds"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Equals"
                                                  ]
                                                },
                                                "value": {
                                                  "anyOf": [
                                                    {
                                                      "type": "string"
                                                    },
                                                    {
                                                      "type": "number"
                                                    }
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "value"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "NotEquals"
                                                  ]
                                                },
                                                "value": {
                                                  "anyOf": [
                                                    {
                                                      "type": "string"
                                                    },
                                                    {
                                                      "type": "number"
                                                    }
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "value"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "HasBeen"
                                                  ]
                                                },
                                                "comparator": {
                                                  "anyOf": [
                                                    {
                                                      "type": "string",
                                                      "enum": [
                                                        "GTE"
                                                      ]
                                                    },
                                                    {
                                                      "type": "string",
                                                      "enum": [
                                                        "LT"
                                                      ]
                                                    }
                                                  ]
                                                },
                                                "value": {
                                                  "anyOf": [
                                                    {
                                                      "type": "string"
                                                    },
                                                    {
                                                      "type": "number"
                                                    }
                                                  ]
                                                },
                                                "windowSeconds": {
                                                  "type": "number"
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "comparator",
                                                "value",
                                                "windowSeconds"
                                              ]
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "Exists"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      "required": [
                                        "path",
                                        "operator"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "type",
                                  "id",
                                  "event",
                                  "hasProperties"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "Email"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "event": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "DFInternalMessageSent"
                                        ]
                                      },
                                      {
                                        "type": "string",
                                        "enum": [
                                          "DFEmailDropped"
                                        ]
                                      },
                                      {
                                        "type": "string",
                                        "enum": [
                                          "DFEmailDelivered"
                                        ]
                                      },
                                      {
                                        "type": "string",
                                        "enum": [
                                          "DFEmailOpened"
                                        ]
                                      },
                                      {
                                        "type": "string",
                                        "enum": [
                                          "DFEmailClicked"
                                        ]
                                      },
                                      {
                                        "type": "string",
                                        "enum": [
                                          "DFEmailBounced"
                                        ]
                                      },
                                      {
                                        "type": "string",
                                        "enum": [
                                          "DFEmailMarkedSpam"
                                        ]
                                      }
                                    ]
                                  },
                                  "times": {
                                    "type": "number"
                                  },
                                  "templateId": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id",
                                  "event",
                                  "templateId"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "Broadcast"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "SubscriptionGroup"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "subscriptionGroupId": {
                                    "type": "string"
                                  },
                                  "subscriptionGroupType": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "OptIn"
                                        ]
                                      },
                                      {
                                        "type": "string",
                                        "enum": [
                                          "OptOut"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "type",
                                  "id",
                                  "subscriptionGroupId",
                                  "subscriptionGroupType"
                                ]
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "entryNode",
                        "nodes"
                      ]
                    },
                    "subscriptionGroupId": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "allOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    "lastRecomputed": {
                      "type": "number"
                    },
                    "createdAt": {
                      "type": "number"
                    },
                    "definitionUpdatedAt": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "id",
                    "workspaceId",
                    "name",
                    "definition",
                    "updatedAt",
                    "createdAt",
                    "definitionUpdatedAt"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Segments"
        ],
        "description": "Delete a segment.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "An empty String",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An empty String",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "An empty String",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An empty String",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/segments/download": {
      "get": {
        "tags": [
          "Segments"
        ],
        "description": "Download a csv containing segment assignments.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "workspaceId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/admin/segments/upload-csv": {
      "post": {
        "tags": [
          "Segments"
        ],
        "description": "Upload a CSV file to add or remove users from a manual segment.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "df-workspace-id",
            "required": true,
            "description": "Id of the workspace which will receive the segment payload. Defaults to the default workspace id, for single tenant systems"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "df-segment-id",
            "required": true
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "Add"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "Remove"
                  ]
                }
              ]
            },
            "in": "header",
            "name": "operation",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/internal-api/debug/boom": {
      "get": {
        "description": "Boom endpoint for throwing errors and testing telemetry.",
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost"
    }
  ]
}
