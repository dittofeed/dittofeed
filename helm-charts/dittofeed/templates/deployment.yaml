
{{- $imageRepository := .Values.image.repository -}}
{{- if .Values.ee.enabled -}}
  {{- if not (and .Values.image.repository (ne .Values.image.repository "dittofeed/dittofeed-lite")) -}}
    {{- $imageRepository = "dittofeed/dittofeed-ee" -}}
  {{- end -}}
{{- end -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dittofeed.fullname" . }}
  labels:
    {{- include "dittofeed.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "dittofeed.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "dittofeed.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "dittofeed.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ $imageRepository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: 
            - node
            - --max-old-space-size={{ .Values.maxOldSpaceSize | default 412 }}
            {{- if .Values.ee.enabled }}
            - packages/ee/dist/scripts/startLite.js
            {{- else }}
            - packages/lite/dist/scripts/startLite.js
            {{- end }}
            - --workspace-name={{ .Values.workspaceName | quote }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env: # Add this section to define environment variables
            - name: NODE_ENV
              value: "production"
            - name: AUTH_MODE
              value: "single-tenant"
            - name: DASHBOARD_API_BASE
              value: ""
            {{- if .Values.separateWorker.enabled }}
            - name: ENABLE_WORKER
              value: "false"
            - name: GLOBAL_CRON_TASK_QUEUE
              value: "global"
            - name: COMPUTED_PROPERTIES_TASK_QUEUE
              value: "workspace"
            - name: COMPUTED_PROPERTIES_ACTIVITY_TASK_QUEUE
              value: "workspace"
            {{- end }}
            {{- if .Values.env }}
            {{- toYaml .Values.env | nindent 12 }}
            {{- end }}
          livenessProbe:
            {{- if .Values.livenessProbe.enabled }}
            httpGet:
              path: {{ .Values.livenessProbe.httpGet.path }}
              port: {{ .Values.livenessProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
