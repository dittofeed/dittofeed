# Default values for dittofeed.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: dittofeed/dittofeed-lite
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # Recommended resources for production
  limits:
    cpu: 1
    memory: 512Mi
  requests:
    cpu: 1
    memory: 512Mi

clickhouse:
  # Enable to install ClickHouse as a dependency
  enabled: false
  auth:
    username: dittofeed
    password: password
    database: dittofeed
    # uncomment to use an existing secret for the password
    # existingSecret: "my-secret-name"
    # existingSecretKey: "password"

postgresql:
  # Enable to install PostgreSQL as a dependency
  enabled: false
  auth:
    username: postgres
    password: password
    database: dittofeed
    # uncomment to use an existing secret for the password
    # existingSecret: "my-secret-name"
    # userPasswordKey: "password"

# FIXME add deployment for standalone temporal

env:
  # FIXME add env variables for clickhouse and postgresql connections
  # BOOTSTRAP should be set to "false" after the first deployment
  # - name: BOOTSTRAP
  #   value: "false"

livenessProbe:
  httpGet:
    path: /dashboard/api
    port: http
readinessProbe:
  httpGet:
    path: /dashboard/api
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
