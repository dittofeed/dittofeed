# Default values for dittofeed.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

workspaceName: Dittofeed
replicaCount: 1

maxOldSpaceSize: 412

image:
  repository: dittofeed/dittofeed-lite
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # Recommended resources for production
  limits:
    cpu: 1
    memory: 512Mi
  requests:
    cpu: 1
    memory: 512Mi

clickhouse:
  # Enable to install ClickHouse as a dependency
  enabled: false
  # Minimal installation for ease of testing.
  shards: 1
  resources:
    limits:
      memory: 1024Mi
    requests:
      memory: 1024Mi
  zookeeper:
    enabled: false
  keeper:
    enabled: true
  auth:
    username: dittofeed
    password: password
    database: dittofeed
    # uncomment to use an existing secret for the password
    # existingSecret: "my-clickhouse-secret-name"
    # existingSecretKey: "password"

postgresql:
  # Enable to install PostgreSQL as a dependency
  enabled: false
  auth:
    username: postgres
    password: password
    database: dittofeed
    # uncomment to use an existing secret for the password
    # existingSecret: "my-pg-secret-name"
    # userPasswordKey: "password"

temporal:
  # Enable to install standalone Temporal as a dependency
  enabled: false
  resources: {}
    # limits:
    #   cpu: 1
    #   memory: 1024Mi
    # requests:
    #   cpu: 1
    #   memory: 1024Mi
  env:
    - name: POSTGRES_SEEDS
      value: "demo-postgresql.default.svc.cluster.local"
    - name: POSTGRES_USER
      value: "postgres"
    - name: POSTGRES_PWD
      value: "password"

  image:
    repository: temporalio/auto-setup
    tag: 1.23.1.0
    pullPolicy: IfNotPresent

env:
  - name: DATABASE_HOST
    value: "demo-postgresql.default.svc.cluster.local"
  - name: DATABASE_USER
    value: "postgres"
  - name: DATABASE_PASSWORD
    value: "password"
  ## - name: DATABASE_PASSWORD
  #   valueFrom:
  #     secretKeyRef:
  #       name: my-pg-secret-name
  #       key: password
  - name: CLICKHOUSE_HOST
    value: "http://demo-clickhouse.default.svc.cluster.local:8123"
  - name: CLICKHOUSE_USER
    value: "dittofeed"
  - name: CLICKHOUSE_PASSWORD
    value: "password"
  # - name: CLICKHOUSE_PASSWORD
  #   valueFrom:
  #     secretKeyRef:
  #       name: my-clickhouse-secret-name
  #       key: password
  # BOOTSTRAP should be set to "false" after the first deployment
  # - name: BOOTSTRAP
  #   value: "false"
  - name: TEMPORAL_ADDRESS
    value: "demo-dittofeed-temporal:80"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
