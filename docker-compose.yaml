version: "3.9"
x-clickhouse-credentials: &clickhouse-credentials
  CLICKHOUSE_USER: dittofeed
  CLICKHOUSE_PASSWORD: password
x-backend-app-env: &backend-app-env
  <<: *clickhouse-credentials
  DATABASE_URL: "postgresql://postgres:password@postgres:5432/dittofeed?connect_timeout=60"
  KAFKA_BROKERS: "kafka:29092"
  CLICKHOUSE_HOST: "http://clickhouse-server:8123"
  TEMPORAL_ADDRESS: "temporal:7233"
  LOG_CONFIG: true
services:
  dashboard:
    build:
      context: .
      dockerfile: ./packages/dashboard/Dockerfile
    profiles: ["apps", "apps-api", "apps-worker"]
    volumes:
      - ./mnt:/dittofeed-mnt
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - temporal
      - kafka
      - api
      - clickhouse-server
    environment:
      <<: *backend-app-env
    networks:
      - dittofeed-network-dev
  api: 
    build:
      context: .
      dockerfile: ./packages/api/Dockerfile
    profiles: ["apps", "apps-dashboard", "apps-worker"]
    volumes:
      - ./mnt:/dittofeed-mnt
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - clickhouse-server
      - temporal
      - kafka
      - worker
    environment:
      <<: *backend-app-env
    networks:
      - dittofeed-network-dev
  worker: 
    build:
      context: .
      dockerfile: ./packages/worker/Dockerfile
    profiles: ["apps", "apps-dashboard", "apps-api"]
    volumes:
      - ./mnt:/dittofeed-mnt
    depends_on:
      - postgres
      - temporal
      - clickhouse-server
      - kafka
    environment:
      <<: *backend-app-env
    networks:
      - dittofeed-network-dev
  temporal:
    container_name: temporal
    depends_on:
      - postgres
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PWD=password
      - POSTGRES_SEEDS=postgres
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/dev.yaml
    image: temporalio/auto-setup:1.18.5
    labels:
      kompose.volume.type: configMap
    networks:
      - dittofeed-network-dev
    ports:
      - 7233:7233
    volumes:
      - ./packages/backend-lib/temporal-dynamicconfig:/etc/temporal/config/dynamicconfig
  postgres:
    image: "postgres:15"
    restart: always
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dittofeed
      POSTGRES_USER: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - dittofeed-network-dev
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log
    networks:
      - dittofeed-network-dev
  kafka:
    image: confluentinc/cp-server:7.3.0
    user: root
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: true
    volumes:
      - kafka:/var/lib/kafka/data
    networks:
      - dittofeed-network-dev
  clickhouse-server:
    image: clickhouse/clickhouse-server:22.9.5.25-alpine
    ports:
      - "8123:8123"
      - "9000:9000"
      - "9009:9009"
    environment:
      <<: *clickhouse-credentials
    depends_on:
      - kafka
      - zookeeper
    volumes:
      - ./packages/backend-lib/clickhouse_config.dev.xml:/etc/clickhouse-server/config.xml
      - clickhouse_lib:/var/lib/clickhouse
      - clickhouse_log:/var/log/clickhouse-server
    networks:
      - dittofeed-network-dev
volumes:
  postgres:
  kafka:
  zookeeper_data:
  zookeeper_logs:
  clickhouse_lib:
  clickhouse_log:

networks:
  dittofeed-network-dev:
    driver: bridge
    name: dittofeed-network-dev
