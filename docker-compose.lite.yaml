
version: "3.9"
x-database-credentials: &database-credentials
  DATABASE_USER: ${DATABASE_USER:-postgres}
  DATABASE_PASSWORD: ${DATABASE_PASSWORD:-password}
x-clickhouse-credentials: &clickhouse-credentials
  CLICKHOUSE_USER: ${CLICKHOUSE_USER:-dittofeed}
  CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-password}
x-backend-app-env: &backend-app-env
  <<: [*clickhouse-credentials, *database-credentials]
  NODE_ENV: production
  DATABASE_HOST: ${DATABASE_HOST:-postgres}
  DATABASE_PORT: ${DATABASE_PORT:-5432}
  CLICKHOUSE_HOST: ${CLICKHOUSE_HOST:-http://clickhouse-server:8123}
  TEMPORAL_ADDRESS: ${TEMPORAL_ADDRESS:-temporal:7233}
  WORKSPACE_NAME: ${WORKSPACE_NAME:-Default}
  AUTH_MODE: ${AUTH_MODE:-single-tenant}
  SECRET_KEY: ${SECRET_KEY:-GEGL1RHjFVOxIO80Dp8+ODlZPOjm2IDBJB/UunHlf3c=}
  PASSWORD: ${PASSWORD:-password}
  DASHBOARD_API_BASE: ${DASHBOARD_API_BASE:-http://localhost:3000}
services:
  lite:
    image: dittofeed/dittofeed-lite:${IMAGE_TAG:-v0.13.13}
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - temporal
      - clickhouse-server
    environment:
      <<: *backend-app-env
      # uncomment while upgrading dittofeed
      # BOOTSTRAP: "false"
    # README: To add local env variables uncomment the following line and add a .env file in the root directory
    # env_file:
    #   - .env
    networks:
      - dittofeed-network-lite
  # useful for upgrading dittofeed
  admin-cli:
    image: dittofeed/dittofeed-lite:${IMAGE_TAG:-v0.13.13}
    entrypoint: []
    profiles: ["admin-cli"]
    command: tail -f /dev/null
    tty: true
    depends_on:
      - postgres
      - temporal
      - clickhouse-server
    environment:
      <<: *backend-app-env
    # README: To add local env variables uncomment the following line and add a .env file in the root directory
    # env_file:
    #   - .env
    networks:
      - dittofeed-network-lite
  temporal:
    container_name: temporal
    depends_on:
      - postgres
    environment:
      - DB=postgresql
      - DB_PORT=${DATABASE_PORT:-5432}
      - POSTGRES_USER=${DATABASE_USER:-postgres}
      - POSTGRES_PWD=${DATABASE_PASSWORD:-password}
      - POSTGRES_SEEDS=${DATABASE_HOST:-postgres}
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/prod.yaml
    image: temporalio/auto-setup:${TEMPORAL_VERSION:-1.22.4}
    labels:
      kompose.volume.type: configMap
    networks:
      - dittofeed-network-lite
    ports:
      - 7233:7233
    volumes:
      - ./packages/backend-lib/temporal-dynamicconfig:/etc/temporal/config/dynamicconfig
  temporal-ui:
    profiles: ["temporal-ui"]
    container_name: temporal-ui
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    image: temporalio/ui:${TEMPORAL_UI_VERSION:-2.22.1}
    networks:
      - dittofeed-network-lite
    ports:
      - 8080:8080
  postgres:
    image: postgres:${POSTGRES_VERSION:-15}
    restart: always
    environment:
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD:-password}
      - POSTGRES_USER=${DATABASE_USER:-postgres}
      - POSTGRES_DB=dittofeed
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - dittofeed-network-lite
  clickhouse-server:
    image: clickhouse/clickhouse-server:23.8.8.20-alpine
    environment:
      <<: *clickhouse-credentials
    ports:
      - "8123:8123"
      - "9000:9000"
      - "9009:9009"
    volumes:
      - clickhouse_lib:/var/lib/clickhouse
      - clickhouse_log:/var/log/clickhouse-server
    networks:
      - dittofeed-network-lite
  # Note that minio is only used for local development. In production, use any S3-compatible storage.
  blob-storage:
    image: minio/minio
    profiles: ["blob-storage"]
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
    volumes:
      - blob-storage:/data
    command: server --console-address ":9001" /data
volumes:
  postgres:
  clickhouse_lib:
  clickhouse_log:

networks:
  dittofeed-network-lite:
    driver: bridge
    name: dittofeed-network-lite
