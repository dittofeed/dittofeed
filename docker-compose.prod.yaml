version: "3.9"
x-database-credentials: &database-credentials
  DATABASE_USER: ${DATABASE_USER:-postgres}
  DATABASE_PASSWORD: ${DATABASE_PASSWORD:-password}
x-kafka-credentials: &kafka-credentials
  KAFKA_USERNAME: ${KAFKA_USERNAME:-dittofeed}
  KAFKA_PASSWORD: ${KAFKA_PASSWORD:-password}
x-clickhouse-credentials: &clickhouse-credentials
  CLICKHOUSE_USER: ${CLICKHOUSE_USER:-dittofeed}
  CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-password}
x-backend-app-env: &backend-app-env
  <<: [*clickhouse-credentials, *kafka-credentials, *database-credentials]
  NODE_ENV: production
  DATABASE_HOST: ${DATABASE_HOST:-postgres}
  DATABASE_PORT: ${DATABASE_PORT:-5432}
  KAFKA_BROKERS: ${KAFKA_BROKERS:-kafka:29092}
  CLICKHOUSE_HOST: ${CLICKHOUSE_HOST:-http://clickhouse-server:8123}
  TEMPORAL_ADDRESS: ${TEMPORAL_ADDRESS:-temporal:7233}
services:
  dashboard:
    image: dittofeed/dittofeed-dashboard:${IMAGE_TAG:-v0.0.14}
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - temporal
      - api
    environment:
      <<: *backend-app-env
    networks:
      - dittofeed-network
  api:
    image: dittofeed/dittofeed-api:${IMAGE_TAG:-v0.0.14}
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - temporal
      - worker
    environment:
      <<: *backend-app-env
    networks:
      - dittofeed-network
  worker:
    image: dittofeed/dittofeed-worker:${IMAGE_TAG:-v0.0.14}
    depends_on:
      - postgres
      - temporal
    environment:
      <<: *backend-app-env
    networks:
      - dittofeed-network
  temporal:
    container_name: temporal
    depends_on:
      - postgres
    environment:
      - DB=postgresql
      - DB_PORT=${DATABASE_PORT:-5432}
      - POSTGRES_USER=${DATABASE_USER:-postgres}
      - POSTGRES_PWD=${DATABASE_PASSWORD:-password}
      - POSTGRES_SEEDS=${DATABASE_HOST:-postgres}
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/prod.yaml
    image: temporalio/auto-setup:${TEMPORAL_VERSION:-1.18.5}
    labels:
      kompose.volume.type: configMap
    networks:
      - dittofeed-network
    ports:
      - 7233:7233
    volumes:
      - ./packages/backend-lib/temporal-dynamicconfig:/etc/temporal/config/dynamicconfig
  postgres:
    image: postgres:${POSTGRES_VERSION:-15}
    restart: always
    environment:
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD:-password}
      - POSTGRES_USER=${DATABASE_USER:-postgres}
      - POSTGRES_DB=dittofeed
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - dittofeed-network
  kafka:
    image: redpandadata/redpanda:v23.1.1
    profiles: ["kafka"]
    ports:
      - 9092:9092
      - 18081:18081
      - 18082:18082
      - 19644:9644
    environment:
      <<: *kafka-credentials
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:29092,external://0.0.0.0:9092
      # Address the broker advertises to clients that connect to the Kafka API.
      # Use the internal addresses to connect to the Redpanda brokers'
      # from inside the same Docker network.
      # Use the external addresses to connect to the Redpanda brokers'
      # from outside the Docker network.
      - --advertise-kafka-addr internal://kafka:29092,external://localhost:9092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      # Address the broker advertises to clients that connect to the HTTP Proxy.
      - --advertise-pandaproxy-addr internal://kafka:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      # Redpanda brokers use the RPC API to communicate with eachother internally.
      - --rpc-addr kafka:33145
      - --advertise-rpc-addr kafka:33145
      # enable logs for debugging.
      - --default-log-level=debug
    volumes:
      - kafka:/var/lib/redpanda/data
    networks:
      - dittofeed-network
  clickhouse-server:
    image: clickhouse/clickhouse-server:22.9.5.25-alpine
    environment:
      <<: *clickhouse-credentials
    ports:
      - "8123:8123"
      - "9000:9000"
      - "9009:9009"
    volumes:
      - clickhouse_lib:/var/lib/clickhouse
      - clickhouse_log:/var/log/clickhouse-server
    networks:
      - dittofeed-network
volumes:
  postgres:
  kafka:
  clickhouse_lib:
  clickhouse_log:

networks:
  dittofeed-network:
    driver: bridge
    name: dittofeed-network
