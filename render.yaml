databases:
  - name: dittofeed-db

envVarGroups:
  - name: clickhouse-credentials
    envVars:
      - key: CLICKHOUSE_USER
        value: dittofeed
      - key: CLICKHOUSE_PASSWORD
        generateValue: true
  - name: backend-app-env
    envVars:
      - key: NODE_ENV
        value: production
      - key: TEMPORAL_ADDRESS
        value: temporal:7233
      - key: CLICKHOUSE_HOST
        value: dittofeed-ch
  - name: temporal-shared
    envVars:
    - key: ENABLE_ES
      value: false
    - key: DB
      value: postgresql
services:
  - type: web
    name: api
    env: docker
    dockerfilePath: ./packages/api/Dockerfile
    dockerContext: .
    envVars:
      - fromGroup: backend-app-env
      - key: DATABASE_HOST
        fromDatabase:
          name: dittofeed-db
          property: host
      - key: DATABASE_USER
        fromDatabase:
          name: dittofeed-db
          property: user
      - key: DATABASE_PORT
        fromDatabase:
          name: dittofeed-db
          property: port
      - key: DATABASE_PASSWORD
        fromDatabase:
          name: dittofeed-db
          property: password
  - type: web
    name: dashboard
    env: docker
    dockerfilePath: ./packages/dashboard/Dockerfile
    dockerContext: .
    envVars:
      - fromGroup: backend-app-env
      - fromGroup: clickhouse-credentials
      - key: DATABASE_HOST
        fromDatabase:
          name: dittofeed-db
          property: host
      - key: DATABASE_USER
        fromDatabase:
          name: dittofeed-db
          property: user
      - key: DATABASE_PORT
        fromDatabase:
          name: dittofeed-db
          property: port
      - key: DATABASE_PASSWORD
        fromDatabase:
          name: dittofeed-db
          property: password
  - type: pserv
    name: dittofeed-ch
    env: docker
    autoDeploy: false
    dockerfilePath: ./render/clickhouse/Dockerfile
    dockerContext: .
    envVars:
      - fromGroup: backend-app-env
      - fromGroup: clickhouse-credentials
    disk:
      name: data
      mountPath: /var/lib/clickhouse
      sizeGB: 10
  - type: pserv
    name: temporal-frontend
    autoDeploy: false
    env: docker
    dockerfilePath: ./render/temporal/server/auto-setup/Dockerfile
    dockerContext: .
    scaling:
      minInstances: 1
      maxInstances: 3
      targetMemoryPercent: 80
      targetCPUPercent: 80
    envVars:
    - fromGroup: temporal-shared
    - key: SERVICES
      value: frontend
    - key: SKIP_POSTGRES_DB_CREATION
      value: true
    - key: SKIP_VISIBILITY_DB_SETUP
      value: false
    # - key: ES_SEEDS
    #   fromService:
    #     name: temporal-elasticsearch
    #     type: pserv
    #     property: host
    # - key: ES_PWD
    #   fromService:
    #     name: temporal-elasticsearch
    #     type: pserv
    #     envVarKey: ELASTIC_PASSWORD
    - key: DBNAME
      fromDatabase:
        name: dittofeed-db
        property: database
    - key: DB_PORT
      fromDatabase:
        name: dittofeed-db
        property: port
    - key: POSTGRES_USER
      fromDatabase:
        name: dittofeed-db
        property: user
    - key: POSTGRES_PWD
      fromDatabase:
        name: dittofeed-db
        property: password
    - key: POSTGRES_SEEDS
      fromDatabase:
        name: dittofeed-db
        property: host
  - type: pserv
    name: temporal-history
    autoDeploy: false
    env: docker
    dockerfilePath: ./render/temporal/server/Dockerfile
    dockerContext: .
    scaling:
      minInstances: 1
      maxInstances: 3
      targetMemoryPercent: 80
      targetCPUPercent: 80
    envVars:
    - fromGroup: temporal-shared
    - key: SERVICES
      value: history
    - key: TEMPORAL_FRONTEND_HOST
      fromService:
        name: temporal-frontend
        type: pserv
        property: host
    # - key: ES_SEEDS
    #   fromService:
    #     name: temporal-elasticsearch
    #     type: pserv
    #     property: host
    # - key: ES_PWD
    #   fromService:
    #     name: temporal-elasticsearch
    #     type: pserv
    #     envVarKey: ELASTIC_PASSWORD
    - key: DBNAME
      fromDatabase:
        name: dittofeed-db
        property: database
    - key: POSTGRES_USER
      fromDatabase:
        name: dittofeed-db
        property: user
    - key: POSTGRES_PWD
      fromDatabase:
        name: dittofeed-db
        property: password
    - key: POSTGRES_SEEDS
      fromDatabase:
        name: dittofeed-db
        property: host
  - type: pserv
    name: temporal-matching
    autoDeploy: false
    env: docker
    dockerfilePath: ./render/temporal/server/Dockerfile
    scaling:
      minInstances: 1
      maxInstances: 3
      targetMemoryPercent: 80
      targetCPUPercent: 80
    envVars:
    - fromGroup: temporal-shared
    - key: SERVICES
      value: matching
    - key: TEMPORAL_FRONTEND_HOST
      fromService:
        name: temporal-frontend
        type: pserv
        property: host
    # - key: ES_SEEDS
    #   fromService:
    #     name: temporal-elasticsearch
    #     type: pserv
    #     property: host
    # - key: ES_PWD
    #   fromService:
    #     name: temporal-elasticsearch
    #     type: pserv
    #     envVarKey: ELASTIC_PASSWORD
    - key: DBNAME
      fromDatabase:
        name: dittofeed-db
        property: database
    - key: POSTGRES_USER
      fromDatabase:
        name: dittofeed-db
        property: user
    - key: POSTGRES_PWD
      fromDatabase:
        name: dittofeed-db
        property: password
    - key: POSTGRES_SEEDS
      fromDatabase:
        name: dittofeed-db
        property: host
  - type: pserv
    autoDeploy: false
    name: temporal-worker
    env: docker
    dockerfilePath: ./render/temporal/server/Dockerfile
    scaling:
      minInstances: 1
      maxInstances: 3
      targetMemoryPercent: 80
      targetCPUPercent: 80
    envVars:
    - fromGroup: temporal-shared
    # The worker service needs to wait for the history service to be up first,
    # otherwise it will fail with "error starting scanner".
    - key: DEPENDS_ON_HISTORY
      fromService:
        name: temporal-history
        type: pserv
        property: host
    - key: SERVICES
      value: worker
    - key: TEMPORAL_FRONTEND_HOST
      fromService:
        name: temporal-frontend
        type: pserv
        property: host
    # - key: ES_SEEDS
    #   fromService:
    #     name: temporal-elasticsearch
    #     type: pserv
    #     property: host
    # - key: ES_PWD
    #   fromService:
    #     name: temporal-elasticsearch
    #     type: pserv
    #     envVarKey: ELASTIC_PASSWORD
    - key: DBNAME
      fromDatabase:
        name: dittofeed-db
        property: database
    - key: POSTGRES_USER
      fromDatabase:
        name: dittofeed-db
        property: user
    - key: POSTGRES_PWD
      fromDatabase:
        name: dittofeed-db
        property: password
    - key: POSTGRES_SEEDS
      fromDatabase:
        name: dittofeed-db
        property: host

  # - type: web
  #   name: worker
  #   env: docker
  #   dockerfilePath: ./packages/worker/Dockerfile
  #   dockerContext: .
  #   envVars:
      # - fromGroup: backend-app-env
      # - fromGroup: clickhouse-credentials
